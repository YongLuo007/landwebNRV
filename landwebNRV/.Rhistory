individualecoregionMap
projection(biomassMap) <- crs(studyareawithecoregionMap)
biomassMap
studyareawithecoregionMap
ecoregionMap
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
studyarea
ecoregionMap
studyarea <- spTransform(studyarea, crs(ecoregionMap))
studyarea
studyareawithecoregionMap <- intersect(ecoregionMap, studyarea)
studyareawithecoregionMap
studyarea
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecoregionMap <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
studyarea <- spTransform(studyarea, crs(ecoregionMap))
plot(ecoregionMap)
dev(4)
plot(ecoregionMap)
plot(studyarea, add=T)
studyareawithecoregionMap <- intersect(ecoregionMap, studyarea)
projection(biomassMap) <- crs(ecoregionMap)
biomassMap
biomassMap <- spTransform(biomassMap, crs(ecoregionMap))
projection(biomassMap) <- crs(ecoregionMap)
biomassMap
ecoregionMap
crs(biomassMap) <- crs(ecoregionMap)
biomassMap
ageMap_sub <- crop(ageMap, extent(individualecoregionMap))
studyareawithecoregionMap <- spTransform(studyareawithecoregionMap, crs(biomassMap))
studyareawithecoregionMap
rm(list=ls())
workPath <- "~/LandWeb/KNN_Original"
biomassMap <- raster(file.path(workPath, "NFI_MODIS250m_kNN_Structure_Biomass_TotalLiveAboveGround_v0.tif"))
ageMap <- raster(file.path(workPath, "NFI_MODIS250m_kNN_Structure_Stand_Age_v0.tif"))
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecoregionMap <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
studyarea <- spTransform(studyarea, crs(ecoregionMap))
studyarea
studyareawithecoregionMap <- intersect(ecoregionMap, studyarea)
studyareawithecoregionMap
ecoregions <- unique(studyareawithecoregionMap$ECOZONE)
studyareawithecoregionMap <- spTransform(studyareawithecoregionMap, crs(biomassMap))
studyareawithecoregionMap
ecoregion
ecoregion <- 3
individualecoregionMap <- studyareawithecoregionMap[studyareawithecoregionMap$ECOZONE == ecoregion, ]
individualecoregionMap
biomassMap_sub <- crop(biomassMap, extent(individualecoregionMap))
biomassMap_sub <- mask(biomassMap_sub, individualecoregionMap)
biomassMap_sub
ageMap_sub <- crop(ageMap, extent(individualecoregionMap))
ageMap_sub <- mask(ageMap_sub, individualecoregionMap)
ageMap_sub
unique(getValues(biomassMap_sub))
unique(getValues(ageMap_sub))
raster::writeRaster(biomassMap_sub,
file.path("~/LandWeb/speciesMapByEcoregion",
paste("ecoregion",ecoregion, "_Biomass.tif", sep = "")),
overwrite=TRUE)
raster::writeRaster(ageMap_sub,
file.path("~/LandWeb/speciesMapByEcoregion",
paste("ecoregion",ecoregion, "_SA.tif", sep = "")),
overwrite=TRUE)
plot(biomassMap_sub)
rm(list=ls())
workPath <- "~/LandWeb/KNN_Original"
biomassMap <- raster(file.path(workPath, "NFI_MODIS250m_kNN_Structure_Biomass_TotalLiveAboveGround_v0.tif"))
ageMap <- raster(file.path(workPath, "NFI_MODIS250m_kNN_Structure_Stand_Age_v0.tif"))
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecoregionMap <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
studyarea <- spTransform(studyarea, crs(ecoregionMap))
studyareawithecoregionMap <- intersect(ecoregionMap, studyarea)
ecoregions <- unique(studyareawithecoregionMap$ECOZONE)
studyareawithecoregionMap <- spTransform(studyareawithecoregionMap, crs(biomassMap))
for (ecoregion in ecoregions){
individualecoregionMap <- studyareawithecoregionMap[studyareawithecoregionMap$ECOZONE == ecoregion, ]
speciesNames <- c("Abie_Bal", "Abie_Las", "Betu_Pap", "Pice_Gla", "Pice_Mar",
"Pinu_Ban", "Pinu_Con", "Pinu_Str", "Popu_Tre")
biomassMap_sub <- crop(biomassMap, extent(individualecoregionMap))
biomassMap_sub <- mask(biomassMap_sub, individualecoregionMap)
ageMap_sub <- crop(ageMap, extent(individualecoregionMap))
ageMap_sub <- mask(ageMap_sub, individualecoregionMap)
raster::writeRaster(biomassMap_sub,
file.path("~/LandWeb/speciesMapByEcoregion",
paste("ecoregion",ecoregion, "_Biomass.tif", sep = "")),
overwrite=TRUE)
raster::writeRaster(ageMap_sub,
file.path("~/LandWeb/speciesMapByEcoregion",
paste("ecoregion",ecoregion, "_SA.tif", sep = "")),
overwrite=TRUE)
for(species in speciesNames){
speciesMap <- raster(file.path(workPath,
paste("NFI_MODIS250m_kNN_Species_", species, "_V0.tif")))
projection(speciesMap) <- crs(studyareawithecoregionMap)
speciesMap <- crop(speciesMap, extent(individualecoregionMap))
speciesMap <- mask(speciesMap, individualecoregionMap)
raster::writeRaster(speciesMap,
file.path("~/LandWeb/speciesMapByEcoregion",
paste("ecoregion",ecoregion, "_",species, ".tif", sep = "")),
overwrite=TRUE)
}
}
dir(workPath)
setwd()
setwd(workPath)
dir()
raster("NFI_MODIS250m_kNN_Species_Abie_Bal_v0.tif" )
speciesMap <- raster(file.path(workPath,
paste("NFI_MODIS250m_kNN_Species_", species, "_V0.tif")))
species
speciesMap <- raster(file.path(workPath,
paste("NFI_MODIS250m_kNN_Species_", species,
"_V0.tif", sep = "")))
rm(list = ls())
load("~/GitHub/landwebNRV/pureStand.RData")
pureStandHeader <- allPlotHeaderDataLongLat[MeasureID %in% pureStand$MeasureID,]
# pureStandbyEcoregion <- plotsByEcoregion(plotLocation = pureStandHeader, studyAreaEcoregionMap = studyareaecoregion)
canadaMap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecoregionMap <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
studyarea <- spTransform(studyarea, crs(ecoregionMap))
studyareawithecoregion <- intersect(ecoregionMap, studyarea)
plotLocation <- SpatialPointsDataFrame(pureStandHeader[,.(Longitude, Latitude)],
pureStandHeader[,.(MeasureID)],
match.ID = TRUE,
proj4string = crs(ecoregionMap))
plotLocationwithecoregion <- intersect(plotLocation, studyareawithecoregion)
canadaMap <- spTransform(canadaMap, crs(ecoregionMap))
library(SpaDES)
dev(4)
clearPlot()
plot(canadaMap, border = "grey")
plot(ecoregionMap, border = "green", add=T)
plot(studyarea, border = "red", add = T)
plot(plotLocation, add = T)
plot(plotLocationwithecoregion, col = "red", add = T)
ls()
allPlotHeaderData
rm(list = ls())
workPath <- "C:/Users/yonluo/Documents/LandWeb/speciesMapByEcoregion"
ecoregions <- c(3,  4,  5,  6,  9, 12, 14, 15)
ecoregion <- ecoregions[1]
ecoregionRaster <- raster(file.path(workPath,
paste("ecoregion", ecoregion,
"_Abie_Bal.tif",
sep = "")))
ecoregionPoly <- shapefile(file.path(workPath,
paste("ecoregion", ecoregion,
"shp", sep = "")))
ecoregionPoly <- shapefile(file.path(workPath,
paste("ecoregion", ecoregion,
".shp", sep = "")))
ecoregionPoly
ecoregionRaster
crs(ecoregionPoly) <- projection(ecoregionRaster)
ecoregionPoly
setValues(ecoregionRaster, ecoregion)
ecoregionRaster_sub <- mask(ecoregionRaster, ecoregionPoly)
plot(ecoregionRaster_sub)
dev(4)
plot(ecoregionRaster_sub)
plot(ecoregionRaster_sub, col = "red")
plot(ecoregionPoly, col = "red")
ecoregionRaster <- raster(file.path(workPath,
paste("ecoregion", ecoregion,
"_Abie_Bal.tif",
sep = "")))
ecoregionPoly <- shapefile(file.path(workPath,
paste("ecoregion", ecoregion,
".shp", sep = "")))
crs(ecoregionPoly) <- projection(ecoregionRaster)
ecoregionRaster <- setValues(ecoregionRaster, ecoregion)
ecoregionRaster_sub <- mask(ecoregionRaster, ecoregionPoly)
ecoregionRaster_sub
ecoregionPoly
unique(getValues(ecoregionRaster_sub))
rm(list = ls())
workPath <- "C:/Users/yonluo/Documents/LandWeb/speciesMapByEcoregion"
ecoregions <- c(3,  4,  5,  6,  9, 12, 14, 15)
ecoregion <- ecoregions[1]
ecoregionRaster <- raster(file.path(workPath,
paste("ecoregion", ecoregion,
"_Abie_Bal.tif",
sep = "")))
ecoregionPoly <- shapefile(file.path(workPath,
paste("ecoregion", ecoregion,
".shp", sep = "")))
crs(ecoregionPoly) <- projection(ecoregionRaster)
ecoregionRaster <- setValues(ecoregionRaster, ecoregion)
ecoregionMap <- mask(ecoregionRaster, ecoregionPoly)
for(ecoregion in ecoregions[2:8]){
ecoregionRaster <- raster(file.path(workPath,
paste("ecoregion", ecoregion,
"_Abie_Bal.tif",
sep = "")))
ecoregionPoly <- shapefile(file.path(workPath,
paste("ecoregion", ecoregion,
".shp", sep = "")))
crs(ecoregionPoly) <- projection(ecoregionRaster)
ecoregionRaster <- setValues(ecoregionRaster, ecoregion)
ecoregionRaster_sub <- mask(ecoregionRaster, ecoregionPoly)
ecoregionMap <- merge(ecoregionMap, ecoregionRaster_sub)
}
plot(ecoregionMap)
raster::writeRaster(ecoregionMap,
file.path("~/LandWeb/ecoregionMap.tif"),
overwrite=TRUE)
ecoregionMap
dd <- raster("~/LandWeb/initialCommunities.tif")
dd
dev(4)
clearPlot()
Plot(ecoregionMap, dd)
ecoregionMap <- raster("~/LandWeb/ecoregionMap.tif")
initialCommunitiesMap <- raster("~/LandWeb/initialCommunities.tif")
projection(ecoregionMap)
projection(ecoregionMap)==projection(initialCommunitiesMap)
projection(initialCommunitiesMap)
crs(initialCommunitiesMap)
crs(ecoregionMap)
workPath <- "C:/Users/yonluo/Documents/LandWeb/speciesMapByEcoregion"
ecoregions <- c(3,  4,  5,  6,  9, 12, 14, 15)
ecoregion <- ecoregions[1]
ecoregionRaster <- raster(file.path(workPath,
paste("ecoregion", ecoregion,
"_Abie_Bal.tif",
sep = "")))
ecoregionRaster
ecoregionMap
projection(initialCommunitiesMap) <- projection(ecoregionMap)
initialCommunitiesMap
crs(ecoregionMapAll) <- crs(ecoregionMap)
ecoregionMap <- raster("~/LandWeb/ecoregionMap.tif")
initialCommunitiesMap <- raster("~/LandWeb/initialCommunities.tif")
projection(initialCommunitiesMap) <- projection(ecoregionMap)
canadaMap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecoregionMapAll <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
crs(ecoregionMapAll) <- crs(ecoregionMap)
studyarea <- spTransform(studyarea, crs(ecoregionMap))
studyareawithecoregion <- intersect(ecoregionMapAll, studyarea)
# plotLocation <- SpatialPointsDataFrame(pureStandHeader[,.(Longitude, Latitude)],
#                                        pureStandHeader[,.(MeasureID)],
#                                        match.ID = TRUE,
#                                        proj4string = crs(ecoregionMap))
# plotLocationwithecoregion <- intersect(plotLocation, studyareawithecoregion)
canadaMap <- spTransform(canadaMap, crs(ecoregionMap))
ecoregionMapAll
projection(ecoregionMapAll) <- crs(ecoregionMap)
ecoregionMapAll
studyarea
studyareawithecoregion <- intersect(ecoregionMapAll, studyarea)
ecoregionMapAll <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
ecoregionMapAll
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
studyarea
canadaMap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
canadaMap
ecoregionMap <- raster("~/LandWeb/ecoregionMap.tif")
ecoregionMap
standardCRS <- crs("+proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-95 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
rm(list = ls())
canadaMap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecoregionMapAll <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
standardCRS <- crs("+proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-95 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
crs(ecoregionMapAll) <- standardCRS
ecoregionMapAll
studyarea <- spTransform(studyarea, standardCRS)
studyarea
studyarea <- spTransform(studyarea, crs(ecoregionMapAll))
studyarea
studyareawithecoregion <- intersect(ecoregionMapAll, studyarea)
rm(list = ls())
canadaMap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecoregionMap <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
studyarea
ecoregionMap
studyarea <- spTransform(studyarea, crs(ecoregionMap))
studyarea
studyareawithecoregion <- intersect(ecoregionMap, studyarea)
studyareawithecoregion
canadaMap <- spTransform(canadaMap, crs(ecoregionMap))
canadaMap
ecoregoinMap1 <- raster("~/LandWeb/ecoregionMap.tif")
ecoregoinMap1
canadaMap <- spTransform(canadaMap, crs(ecoregoinMap1))
canadaMap
ecoregionMap <- spTransform(ecoregionMap, crs(ecoregoinMap1))
ecoregionMap
studyareawithecoregion <- spTransform(studyareawithecoregion, crs(ecoregoinMap1))
studyareawithecoregion
library(SpaDES)
dev(4)
clearPlot()
plot(canadaMap, border = "grey")
plot(ecoregionMap, border = "green", add=T)
plot(studyarea, border = "red", add = T)
studyarea
plot(studyareawithecoregion, border = "red", add = T)
studyarea <- spTransform(studyarea, crs(ecoregoinMap1))
studyarea
clearPlot()
plot(canadaMap, border = "grey")
plot(ecoregionMap, border = "green", add=T)
plot(studyarea, border = "red", add = T)
clearPlot()
plot(canadaMap, border = "grey")
plot(studyarea, border = "red", add = T)
plot(ecoregionMap, border = "green", add=T)
plot(studyarea, border = "red", add = T)
initialCommunitiesMap <- raster("~/LandWeb/initialCommunitiesMap.tif")
initialCommunitiesMap <- raster("~/LandWeb/initialCommunities.tif")
ecoregoinMap <- raster("~/LandWeb/ecoregionMap.tif")
initialCommunitiesMap <- raster("~/LandWeb/initialCommunities.tif")
# pureStandbyEcoregion <- plotsByEcoregion(plotLocation = pureStandHeader, studyAreaEcoregionMap = studyareaecoregion)
projection(initialCommunitiesMap) <- projection(ecoregionMap)
initialCommunitiesMap
canadaMap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
canadaMap <- spTransform(canadaMap, crs(ecoregoinMap))
canadaMap
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
studyarea <- spTransform(studyarea, crs(ecoregoinMap))
studyarea
ecoregionMapAll <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
ecoregionMapAll <- spTransform(ecoregionMapAll, crs(ecoregoinMap))
ecoregionMapAll
clearPlot()
plot(canadaMap, border = "grey")
plot(ecoregionMapAll, border = "green", add=T)
plot(studyarea, border = "red", add = T)
Plot(ecoregionMap, initialCommunitiesMap)
clearPlot()
dev(4)
clearPlot()
plot(canadaMap, border = "grey")
plot(ecoregionMapAll, border = "green", add=T)
plot(studyarea, border = "red", add = T)
dev(5)
Plot(ecoregionMap, initialCommunitiesMap)
rm(list = ls())
ecoregoinMap <- raster("~/LandWeb/ecoregionMap.tif")
initialCommunitiesMap <- raster("~/LandWeb/initialCommunities.tif")
projection(initialCommunitiesMap) <- projection(ecoregionMap)
canadaMap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
canadaMap <- spTransform(canadaMap, crs(ecoregoinMap))
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
studyarea <- spTransform(studyarea, crs(ecoregoinMap))
ecoregionMapAll <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
ecoregionMapAll <- spTransform(ecoregionMapAll, crs(ecoregoinMap))
library(SpaDES)
dev(4)
clearPlot()
plot(canadaMap, border = "grey")
plot(ecoregionMapAll, border = "green", add=T)
plot(studyarea, border = "red", add = T)
dev(5)
Plot(ecoregionMap, initialCommunitiesMap)
rm(list = ls())
ecoregionMap <- raster("~/LandWeb/ecoregionMap.tif")
initialCommunitiesMap <- raster("~/LandWeb/initialCommunities.tif")
projection(initialCommunitiesMap) <- projection(ecoregionMap)
canadaMap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
canadaMap <- spTransform(canadaMap, crs(ecoregionMap))
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
studyarea <- spTransform(studyarea, crs(ecoregionMap))
ecoregionMapAll <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
ecoregionMapAll <- spTransform(ecoregionMapAll, crs(ecoregionMap))
library(SpaDES)
dev(4)
clearPlot()
plot(canadaMap, border = "grey")
plot(ecoregionMapAll, border = "green", add=T)
plot(studyarea, border = "red", add = T)
dev(5)
Plot(ecoregionMap, initialCommunitiesMap)
Plot(ecoregionMap, initialCommunitiesMap)
dev(5)
Plot(ecoregionMap)
clearPlot()
Plot(ecoregionMap)
Plot(initialCommunitiesMap)
writeRaster(initialCommunitiesMap,
"~/LandWeb/initialCommunities.tif",
overwrite = TRUE)
initialCommunitiesMap
writeRaster(initialCommunitiesMap,
file.path("~/LandWeb/initialCommunities.tif"),
overwrite = TRUE)
source('~/GitHub/landwebNRV/getInitialComm.R')
rm(list=ls())
speciesNames <- c("Abie_Bal", "Abie_Las", "Betu_Pap", "Pice_Gla", "Pice_Mar",
"Pinu_Ban", "Pinu_Con", "Pinu_Str", "Popu_Tre")
speciesComMap <- raster(file.path("~/LandWeb/speciesMap",
paste(speciesNames[1], ".tif", sep = "")))
speciesComMap <- as.logical(speciesComMap)
speciesComMap[Which(is.na(speciesComMap), cell = TRUE)] <- 0
k <- 1
for(species in speciesNames[2:9]){
speciesMap <- raster(file.path("~/LandWeb/speciesMap",
paste(species, ".tif", sep = "")))
speciesMap <- as.logical(speciesMap)
speciesMap[Which(is.na(speciesMap), cell = TRUE)] <- 0
speciesComMap <- speciesMap*(10^k)+speciesComMap
k <- k+1
}
# set the non-forested area as NA
speciesComMap[Which(speciesComMap==0, cell = TRUE)] <- NA
raster::writeRaster(speciesComMap,
file.path("~/LandWeb/initialCommunities.tif"),
overwrite=TRUE)
initialCommunities <- data.table(mapCode=sort(unique(getValues(speciesComMap))))
initialCommunities[,mapCodeStr:=as.character(mapCode)]
initialCommunities[, NofStr:=nchar(mapCodeStr)]
for(i in 1:8){
initialCommunities[NofStr==i, mapCodeFull:=paste(paste(rep("0",(9-i)),
collapse = ""),
mapCodeStr,
sep = "")]
}
initialCommunities[NofStr==9, mapCodeFull:=mapCodeStr]
output <- data.table(mapCode = numeric(), speciesPresence = character(),
species = character())
for(i in 1:nrow(initialCommunities)){
outputAdd <- data.table(mapCode = initialCommunities$mapCode[i],
speciesPresence = substring(initialCommunities$mapCodeFull[i],
seq(1, 9, 1), seq(1, 9, 1)),
species = c("Popu_Tre", "Pinu_Str", "Pinu_Con", "Pinu_Ban",
"Pice_Mar", "Pice_Gla", "Betu_Pap", "Abie_Las",
"Abie_Bal"))
output <- rbind(output, outputAdd)
}
initialCommunities <- output[speciesPresence!="0",]
initialCommunities[,newMapCode:=as.numeric(as.factor(mapCode))]
mapcodeconnection <- unique(initialCommunities[,.(mapCode, newMapCode)], by = "mapCode")
ncell(speciesComMap)
indexTable <- data.table(pixelIndex=1:ncell(speciesComMap),
mapCode=getValues(speciesComMap))
indexTable <- indexTable[!is.na(mapCode),]
indexTable <- setkey(indexTable, mapCode)[setkey(mapcodeconnection, mapCode),
nomatch = 0]
speciesComMap[indexTable$pixelIndex] <- indexTable$newMapCode
raster::writeRaster(speciesComMap,
file.path("~/LandWeb/initialCommunities.tif"),
overwrite=TRUE)
initialCommunities[, ':='(mapCode = newMapCode, newMapCode = NULL, speciesPresence = NULL)]
write.csv(initialCommunities, "initialCommunities.csv", row.names = FALSE)
initialCommunities
speciesComMap
library(data.table)
initialCommunities
speciesComMap
initialCommunities <- data.table(mapCode=sort(unique(getValues(speciesComMap))))
initialCommunities[,mapCodeStr:=as.character(mapCode)]
initialCommunities[, NofStr:=nchar(mapCodeStr)]
for(i in 1:8){
initialCommunities[NofStr==i, mapCodeFull:=paste(paste(rep("0",(9-i)),
collapse = ""),
mapCodeStr,
sep = "")]
}
initialCommunities
initialCommunities
initialCommunities <- data.table(mapCode=sort(unique(getValues(speciesComMap))))
initialCommunities
rm(list=ls())
speciesNames <- c("Abie_Bal", "Abie_Las", "Betu_Pap", "Pice_Gla", "Pice_Mar",
"Pinu_Ban", "Pinu_Con", "Pinu_Str", "Popu_Tre")
speciesComMap <- raster(file.path("~/LandWeb/speciesMap",
paste(speciesNames[1], ".tif", sep = "")))
speciesComMap <- as.logical(speciesComMap)
speciesComMap[Which(is.na(speciesComMap), cell = TRUE)] <- 0
speciesComMap
Which(is.na(speciesComMap), cell = TRUE)
speciesNames <- c("Abie_Bal", "Abie_Las", "Betu_Pap", "Pice_Gla", "Pice_Mar",
"Pinu_Ban", "Pinu_Con", "Pinu_Str", "Popu_Tre")
speciesComMap <- raster(file.path("~/LandWeb/speciesMap",
paste(speciesNames[1], ".tif", sep = "")))
speciesComMap <- as.logical(speciesComMap)
speciesComMap
unique(getValues(speciesComMap))
Which(is.na(speciesComMap), cell = TRUE)
?Which
Which(is.na(speciesComMap), cells = TRUE)
speciesComMap <- raster(file.path("~/LandWeb/speciesMap",
paste(speciesNames[1], ".tif", sep = "")))
speciesComMap <- as.logical(speciesComMap)
speciesComMap[Which(is.na(speciesComMap), cells = TRUE)] <- 0
speciesComMap <- raster(file.path("~/LandWeb/speciesMap",
paste(speciesNames[1], ".tif", sep = "")))
speciesComMap <- as.logical(speciesComMap)
speciesComMap <- raster(file.path("~/LandWeb/speciesMap",
paste(speciesNames[1], ".tif", sep = "")))
speciesComMap <- as.logical(speciesComMap)
Which(is.na(speciesComMap), cells = TRUE, na.rm = FALSE)
speciesComMap <- raster(file.path("~/LandWeb/speciesMap",
paste(speciesNames[1], ".tif", sep = "")))
speciesComMap
