biomassinstudyareaBySpecies
speciesTable <- data.table(getValues(biomassinstudyareaBySpecies))
rm(list=ls())
# all the workflow
# random draw a polygon as a study area
library(dplyr); library(data.table); library(raster); library(sp); library(SpaDES)
canadamap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
dev(4)
clearPlot()
Plot(canadamap)
severalrandompoints <- clickCoordinates(10)
studyarea <- SpatialPolygons(list(Polygons(list(Polygon(severalrandompoints$coords)), ID = 1)),
proj4string = crs(canadamap))
# prepare ecoregion map and initial community map in study area
ecoregionfull <- shapefile("M:/data/ecoFramework/Ecodistricts/ecodistricts.shp")
ecoregionstatus <- data.table(active = "yes",
ecoregion = 1:1031)
specieslayersfull <- readRDS("C:/Users/yonluo/Documents/GitHub/landwebNRV/speciesLayersStack.rds")
speciesnames <- names(specieslayersfull)
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayersfull,
speciesPresence = 50,
studyArea = studyarea)
source('~/GitHub/landwebNRV/landwebNRV/R/ecoregionMapProducer.R')
ecoregionFiles <- ecoregionMapProducer(studyAreaRaster = initialCommFiles$initialCommunityMap,
ecoregionMapFull = ecoregionfull,
ecoregionName = "ECODISTRIC",
ecoregionActiveStatus = ecoregionstatus,
studyArea = studyarea)
lcc2005 <- raster("M:/data/LandCoverOfCanada2005_V1_4/LCC2005_V1_4a.tif")
activeStatusTable <- data.table(active = c(rep("yes", 15), rep("no", 25)),
mapcode = 1:40)  # this is based on description
source('~/GitHub/landwebNRV/landwebNRV/R/nonactiveEcoFromRaster.R')
simulationMaps <- nonactiveEcoFromRaster(nonactiveRaster = lcc2005,
activeStatus = activeStatusTable,
ecoregionMap = ecoregionFiles$ecoregionMap,
ecoregion = ecoregionFiles$ecoregion,
initialCommunityMap = initialCommFiles$initialCommunityMap,
initialCommunity = initialCommFiles$initialCommunity)
speciesLayers<- specieslayersfull
biomassLayer <- biomassmap
biomassmap <- raster("M:/data/kNN/Original/NFI_MODIS250m_kNN_Structure_Biomass_TotalLiveAboveGround_v0.tif")
biomassLayer <- biomassmap
SALayer <- samap
samap <- raster("M:/data/kNN/Original/NFI_MODIS250m_kNN_Structure_Stand_Age_v0.tif")
SALayer <- samap
ecoregionMap <- simulationMaps$ecoregionMap
if(projection(speciesLayers)!=projection(ecoregionMap)){
ecoregionMap <- projectRaster(ecoregionMap, crs = crs(speciesLayers))
ecoregionMap[] <- round(getValues(ecoregionMap))
}
if(projection(speciesLayers)!=projection(biomassLayer)){
biomassLayer <- projectRaster(biomassLayer, crs = crs(speciesLayers))
}
if(projection(speciesLayers)!=projection(SALayer)){
SALayer <- projectRaster(SALayer, crs = crs(speciesLayers))
}
speciesinstudyarea <- crop(speciesLayers, ecoregionMap)
speciesinstudyarea <- suppressWarnings(mask(speciesinstudyarea, ecoregionMap))
speciesTable <- data.table(getValues(speciesinstudyarea))
biomassinstudyarea <- crop(biomassLayer, ecoregionMap)
speciesTable
biomassinstudyarea <- suppressWarnings(mask(biomassinstudyarea, ecoregionMap))
speciesTable[, biomass:=getVaules(biomassinstudyarea)]
speciesTable[, biomass:=getValues(biomassinstudyarea)]
speciesTable
SAinstudyarea <- crop(SALayer, ecoregionMap)
SAinstudyarea <- suppressWarnings(mask(SAinstudyarea, ecoregionMap))
speciesTable[,':='(SA = getValues(SAinstudyarea), ecoregion = getValues(ecoregionMap))]
speciesTable <- speciesTable[!is.na(ecoregion),]
speciesTable
speciesTable1 <- melt.data.table(speciesTable, measure.vars = names(speciesinstudyarea),
variable.name = "species")
speciesTable1
?melt.data.table
speciesTable1 <- melt.data.table(speciesTable, measure.vars = names(speciesinstudyarea),
variable.name = "species", value.name = "percentage")
speciesTable1
speciesTable1[, speciesBiomass:=biomass*percentage*0.01]
speciesTable1
speciesTable1 <- speciesTable1[percentage>=50,]
speciesTable1
plot(speciesBiomass~SA, data = speciesTable1[ecoregion == 139 & species == "Abie_Las",])
names(speciesinstudyarea)
speciesTable1 <- speciesTable1[,.(maxBiomass = 100*quantile(speciesBiomass, 0.8, na.rm = TRUE)),
by = c("ecoregion", "species")]
speciesTable1
output <- unique(speciesTable[,.(ecoregion, species)], by = c("ecoregion", "species"))
speciesTable[,.(ecoregion, species)]
speciesTable <- melt.data.table(speciesTable, measure.vars = names(speciesinstudyarea),
variable.name = "species", value.name = "percentage")
speciesTable[, speciesBiomass:=biomass*percentage*0.01]
speciesTable1 <- speciesTable1[percentage>=50,]
speciesTable1 <- speciesTable1[,.(maxBiomass = 100*quantile(speciesBiomass, 0.8, na.rm = TRUE)),
by = c("ecoregion", "species")]
speciesTable1 <- speciesTable[percentage>=50,]
speciesTable1 <- speciesTable1[,.(maxBiomass = 100*quantile(speciesBiomass, 0.8, na.rm = TRUE)),
by = c("ecoregion", "species")]
speciesTable1
output <- unique(speciesTable[,.(ecoregion, species)], by = c("ecoregion", "species"))
output
output <- dplyr::left_join(output, speciesTable1, by = c("ecoregion", "species"))
output
speciesTable1 <- speciesTable[percentage>=50,]
speciesTable1 <- speciesTable1[,.(maxBiomass = 100*quantile(speciesBiomass, 0.8, na.rm = TRUE)),
by = c("ecoregion", "species")]
output <- unique(speciesTable[,.(ecoregion, species)], by = c("ecoregion", "species"))
output <- dplyr::left_join(output, speciesTable1, by = c("ecoregion", "species")) %>%
data.table
output
source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttributes_kNN.R')
source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttributes_kNN.R')
speciesEcoregionTable <- biomassAttributes_kNN(speciesLayers = specieslayersfull,
biomassLayer = biomassmap,
SALayer = samap,
ecoregionMap = simulationMaps$ecoregionMap)
speciesEcoregionTable
source('~/GitHub/landwebNRV/landwebNRV/R/speciesRelativeAbundance_kNN.R')
speciesSEP <- speciesRelativeAbundance_kNN(ecoregionMap = simulationMaps$ecoregionMap,
speciesLayers = specieslayersfull)
source('~/GitHub/landwebNRV/landwebNRV/R/speciesRelativeAbundance_kNN.R')
speciesSEP <- speciesRelativeAbundance_kNN(ecoregionMap = simulationMaps$ecoregionMap,
speciesLayers = specieslayersfull)
speciesSEP
dd <- speciesSEP$speciesAbundanceMaps
dev(4)
Plot(dd\)
Plot(dd)
clearPlot()
Plot(dd)
speciesSEPtable <- speciesSEP$speciesAbundanceTable
speciesSEPtable
simulationMaps
septable <- speciesSEP$speciesAbundanceTable
sepmaps <- speciesSEP$speciesAbundanceMaps
names(septable) <- c("ecoregion", "species", "SEP")
septable
speciesEcoregionTable
speciesEcoregionTable <- left_join(speciesEcoregionTable, septable, by = c("ecoregion", "species"))
speciesEcoregionTable
speciesEcoregionTable <- data.table(speciesEcoregionTable)
speciesEcoregionTable
speciesEcoregionTable[SEP==0, ':='(maxBiomass = 0, maxANPP = 0)]
speciesEcoregionTable
source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttributes_kNN.R')
speciesEcoregionTable <- biomassAttributes_kNN(speciesLayers = specieslayersfull,
biomassLayer = biomassmap,
SALayer = samap,
ecoregionMap = simulationMaps$ecoregionMap)
speciesEcoregionTable
septable <- speciesSEP$speciesAbundanceTable
sepmaps <- speciesSEP$speciesAbundanceMaps
names(septable) <- c("ecoregion", "species", "SEP")
speciesEcoregionTable <- left_join(speciesEcoregionTable, septable, by = c("ecoregion", "species")) %>%
data.table
speciesEcoregionTable
speciesEcoregionTable[SEP==0, ':='(maxBiomass = 0, maxANPP = 0)]
speciesEcoregionTable
NAdata <- speciesEcoregionTable[is.na(maxBiomass),]
NON_NAdata <- speciesEcoregionTable[!is.na(maxBiomass),]
NAdata
samap <- raster("M:/data/kNN/Original/NFI_MODIS250m_kNN_Species_Pseu_Men_Gla_v0.tif")
clearPlot()
dev(4)
clearPlot()
Plot(samap)
samap <- raster("M:/data/kNN/Original/NFI_MODIS250m_kNN_Species_Pseu_Men_v0.tif")
Plot(samap)
clearPlot()
Plot(samap)
samap <- raster("M:/data/kNN/Original/NFI_MODIS250m_kNN_Species_Pseu_Men_Men_v0.tif")
clearPlot()
Plot(samap)
samap <- raster("M:/data/kNN/Original/NFI_MODIS250m_kNN_Species_Pseu_Men_v0.tif")
clearPlot()
Plot(samap)
specieslayersfull
Pseu_Men <- raster("M:/data/kNN/Original/NFI_MODIS250m_kNN_Species_Pseu_Men_v0.tif")
specieslayersfull
specieslayersfull <- stack(specieslayersfull, Pseu_Men)
specieslayersfull
additionalEcoMap <- shapefile("M:/data/ecoFramework/Ecoregions/ecoregions.shp")
plot(additionalEcoMap)
plot(ecoregionfull)
additionalEcoMap <- shapefile("M:/data/ecoFramework/Ecozones/ecozones.shp")
plot(additionalEcoMap)
additionalEcoMap <- shapefile("M:/data/ecoFramework/Ecoregions/ecoregions.shp")
additionalEcoMap
NAdata
speciesLayers <- specieslayersfull
biomassLayer <- biomassmap
SALayer <- samap
ecoregionMap <- simulationMaps$ecoregionMap
additionalEcoMap <- shapefile("M:/data/ecoFramework/Ecoregions/ecoregions.shp")
NAData <- NAdata
unique(NAData$species)
speciesLayers1 <- raster::subset(speciesLayers, as.character(unique(NAData$species)))
speciesLayers1
names(specieslayersfull)
names(speciesLayers1)
unique(NAData$ecoregion)
ecoregionMap %in% unique(NAData$ecoregion)
ecoregionMap
getValues(ecoregionMap) %in% unique(NAData$ecoregion)
a <- getValues(ecoregionMap) %in% unique(NAData$ecoregion)
length(which(a==TRUE))
length(a)
ecoregionMap[!(getValues(ecoregionMap) %in% unique(NAData$ecoregion))] <- NA
plot(ecoregionMap)
Plot(ecoregionMap)
clearPlot()
Plot(ecoregionMap)
Plot(simulationMaps$ecoregionMap)
unique(getValues(ecoregionMap)) %in% unique(getValues(simulationMaps$ecoregionMap))
unique(getValues(simulationMaps$ecoregionMap)) %in% unique(getValues(ecoregionMap))
additionalEcoMap <- spTransform(additionalEcoMap, crs = crs(ecoregionMap))
additionalEcoMap <- spTransform(additionalEcoMap, CRS = CRS(ecoregionMap))
?spTransform
CRS(ecoregionMap)
crs(ecoregionMap)
additionalEcoMap <- spTransform(additionalEcoMap, CRSobj = crs(ecoregionMap))
additionalEcoMap
Plot(additionalEcoMap)
additionalEcoMap <- sp::spTransform(additionalEcoMap, CRSobj = crs(speciesLayers))
additionalEcoMap
additionalEcoMap <- shapefile("M:/data/ecoFramework/Ecoregions/ecoregions.shp")
crs(additionalEcoMap)
projection(additionalEcoMap)
projection(additionalEcoMap) != (projection(speciesLayers)
projection(additionalEcoMap) != projection(speciesLayers)
additionalEcoMap <- sp::spTransform(additionalEcoMap, CRSobj = crs(speciesLayers))
projection(additionalEcoMap) != projection(speciesLayers)
ecoregionLevel <- unique(NAData$ecoregion)
subsetNAData <- NAData[ecoregion == ecoregionLevel[1],]
subsetNAData
ecoregionMap %in% 2
a <- ecoregionMap %in% 2
Plot(a)
ecoregionMap[!(getValues(ecoregionMap) %in% unique(NAData$ecoregion))]
!(getValues(ecoregionMap) %in% unique(NAData$ecoregion))
subEcoregion[!(getValues(subEcoregion) %in% unique(NAData$ecoregion))] <- NA
subEcoregion <- ecoregionMap
subEcoregion[!(getValues(subEcoregion) %in% unique(NAData$ecoregion))] <- NA
subEcoregion
sort(unique(getValues(subEcoregion)))
sort(unique(getValues(subEcoregion)))==sort(unique(NAData$ecoregion))
subAdditionalEcoMap <- raster::intersect(additionalEcoMap, subEcoregion)
ls()
m <- get("studyarea")
m
ls(pattern = "species")
additionalEcoMap
subEcoregion
ecoregionMap
subAdditionalEcoMap <- raster::crop(additionalEcoMap, subEcoregion)
subAdditionalEcoMap
additionalEcoMap
additionalEcoMap@data
length(unique(additionalEcoMap@data$ECOREGION))
length(unique(additionalEcoMap@data$ECOZONE))
length(unique(additionalEcoMap@data$ECOREGION))
length(unique(additionalEcoMap@data$REGION_NAM))
length(unique(subAdditionalEcoMap@data$REGION_NAM))
subAdditionalEcoMap_Raster <- setValues(ecoregionMap, NA)
subAdditionalEcoMap_Raster
subAdditionalEcoLevel <- unique(subAdditionalEcoMap@data$ECOREGION)
subAdditionalEcoLevel
i <- 1
indiEcoregion <- subAdditionalEcoLevel[1]
indiEcoregion
indiSubAdditionalEcoMap <- subAdditionalEcoMap[subAdditionalEcoMap@data[,ECOREGION] == indiEcoregion]
indiSubAdditionalEcoMap <- subAdditionalEcoMap[subAdditionalEcoMap@data[,ECOREGION] == indiEcoregion,]
subAdditionalEcoMap@data
names(subAdditionalEcoMap@data)
subAdditionalEcoMap@data[,ECOREGION]
subAdditionalEcoMap@data[,ECOREGION]
indiSubAdditionalEcoMap <- subAdditionalEcoMap[subAdditionalEcoMap@data$ECOREGION == indiEcoregion,]
plot(indiSubAdditionalEcoMap)
indiEcoMapRaster <- setValues(subAdditionalEcoMap_Raster, indiEcoregion)
indiEcoMapRaster <- crop(indiEcoMapRaster, indiSubAdditionalEcoMap)
indiEcoMapRaster <- suppressWarnings(mask(indiEcoMapRaster, indiSubAdditionalEcoMap))
subAdditionalEcoMap_Raster <- setValues(ecoregionMap, NA)
subAdditionalEcoLevel <- unique(subAdditionalEcoMap@data$ECOREGION)
for(indiEcoregion in subAdditionalEcoLevel){
indiSubAdditionalEcoMap <- subAdditionalEcoMap[subAdditionalEcoMap@data$ECOREGION == indiEcoregion,]
indiEcoMapRaster <- setValues(subAdditionalEcoMap_Raster, indiEcoregion)
indiEcoMapRaster <- crop(indiEcoMapRaster, indiSubAdditionalEcoMap)
indiEcoMapRaster <- suppressWarnings(mask(indiEcoMapRaster, indiSubAdditionalEcoMap))
if(indiEcoregion == subAdditionalEcoLevel[1]){
allAddEcoMapRaster <- indiEcoMapRaster
} else {
allAddEcoMapRaster <- merge(allAddEcoMapRaster, indiEcoMapRaster)
}
}
allAddEcoMapRaster
plot(allAddEcoMapRaster)
allAddEcoMapRaster <- suppressWarnings(mask(allAddEcoMapRaster, subEcoregion))
plot(allAddEcoMapRaster)
ecodistrictEcoregionTable <- data.table(district = getValues(subEcoregion),
ecoregion = getValues(allAddEcoMapRaster))[!is.na(district),]
ecodistrictEcoregionTable
ecodistrictEcoregionTable[,checkNumber:=length(unique(ecoregion)), by = district]
ecodistrictEcoregionTable
unique(ecodistrictEcoregionTable$checkNumber)
ecodistrictEcoregionTable[checkNumber == 2,]
ecodistrictEcoregionTable[checkNumber == 2 & district == 25,]
unique(ecodistrictEcoregionTable[checkNumber == 2 & district == 25,]$ecoregion)
ecodistrictEcoregionTable[checkNumber == 1, drop = "no"]
ecodistrictEcoregionTable[checkNumber == 1, drop := "no"]
ecodistrictEcoregionTable[checkNumber != 1, drop := "yes"]
ecodistrictEcoregionTable
ecodistrictEcoregionTable <- data.table(district = getValues(subEcoregion),
ecoregion = getValues(allAddEcoMapRaster))[!is.na(district),]
ecodistrictEcoregionTable[,totLength:=length(ecoregion), by = district]
ecodistrictEcoregionTable
ecodistrictEcoregionTable[,ecoLength:=length(totLength), by = c("district", "ecoregion")]
ecodistrictEcoregionTable
ecodistrictEcoregionTable[, percentage:=ecoLength/totLength]
ecodistrictEcoregionTable
ecodistrictEcoregionTable[, maxPercent:=max(percentage), by = district]
ecodistrictEcoregionTable
range(ecodistrictEcoregionTable$maxPercent)
ecodistrictEcoregionTable <- ecodistrictEcoregionTable[percentage == maxPercent, .(district, ecoregion)] %>%
unique(., by = c("district", "ecoregion"))
ecodistrictEcoregionTable
rm(list=ls())
# all the workflow
# random draw a polygon as a study area
library(dplyr); library(data.table); library(raster); library(sp); library(SpaDES)
canadamap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
dev(4)
clearPlot()
Plot(canadamap)
severalrandompoints <- clickCoordinates(10)
studyarea <- SpatialPolygons(list(Polygons(list(Polygon(severalrandompoints$coords)), ID = 1)),
proj4string = crs(canadamap))
Plot(studyarea, addTo = T)
Plot(studyarea, addTo = "canadamap")
# prepare ecoregion map and initial community map in study area
ecoregionfull <- shapefile("M:/data/ecoFramework/Ecodistricts/ecodistricts.shp")
ecoregionstatus <- data.table(active = "yes",
ecoregion = 1:1031)
specieslayersfull <- readRDS("C:/Users/yonluo/Documents/GitHub/landwebNRV/speciesLayersStack.rds")
Pseu_Men <- raster("M:/data/kNN/Original/NFI_MODIS250m_kNN_Species_Pseu_Men_v0.tif")
specieslayersfull <- stack(specieslayersfull, Pseu_Men)
speciesnames <- names(specieslayersfull)
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayersfull,
speciesPresence = 50,
studyArea = studyarea)
source('~/GitHub/landwebNRV/landwebNRV/R/ecoregionMapProducer.R')
ecoregionFiles <- ecoregionMapProducer(studyAreaRaster = initialCommFiles$initialCommunityMap,
ecoregionMapFull = ecoregionfull,
ecoregionName = "ECODISTRIC",
ecoregionActiveStatus = ecoregionstatus,
studyArea = studyarea)
lcc2005 <- raster("M:/data/LandCoverOfCanada2005_V1_4/LCC2005_V1_4a.tif")
activeStatusTable <- data.table(active = c(rep("yes", 15), rep("no", 25)),
mapcode = 1:40)  # this is based on description
source('~/GitHub/landwebNRV/landwebNRV/R/nonactiveEcoFromRaster.R')
simulationMaps <- nonactiveEcoFromRaster(nonactiveRaster = lcc2005,
activeStatus = activeStatusTable,
ecoregionMap = ecoregionFiles$ecoregionMap,
ecoregion = ecoregionFiles$ecoregion,
initialCommunityMap = initialCommFiles$initialCommunityMap,
initialCommunity = initialCommFiles$initialCommunity)
biomassmap <- raster("M:/data/kNN/Original/NFI_MODIS250m_kNN_Structure_Biomass_TotalLiveAboveGround_v0.tif")
# source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttr_IntepFromkNN.R')
# speciesEcoregionTable <- biomassAttr_IntepFromkNN(speciesLayers = specieslayersfull,
#                                                   biomassLayer = biomassmap,
#                                                   percentageCutPoint = 50,
#                                                   intepolateMethod = "IDW",
#                                                   ecoregionMap = simulationMaps$ecoregionMap)
# get the biomass attributs from kNN maps
biomassmap <- raster("M:/data/kNN/Original/NFI_MODIS250m_kNN_Structure_Biomass_TotalLiveAboveGround_v0.tif")
samap <- raster("M:/data/kNN/Original/NFI_MODIS250m_kNN_Structure_Stand_Age_v0.tif")
source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttributes_kNN.R')
speciesEcoregionTable <- biomassAttributes_kNN(speciesLayers = specieslayersfull,
biomassLayer = biomassmap,
SALayer = samap,
ecoregionMap = simulationMaps$ecoregionMap)
# get the biomass attributs from ground plots
source('~/GitHub/landwebNRV/landwebNRV/R/speciesRelativeAbundance_kNN.R')
speciesSEP <- speciesRelativeAbundance_kNN(ecoregionMap = simulationMaps$ecoregionMap,
speciesLayers = specieslayersfull)
septable <- speciesSEP$speciesAbundanceTable
sepmaps <- speciesSEP$speciesAbundanceMaps
names(septable) <- c("ecoregion", "species", "SEP")
speciesEcoregionTable <- left_join(speciesEcoregionTable, septable, by = c("ecoregion", "species")) %>%
data.table
speciesEcoregionTable[SEP==0, ':='(maxBiomass = 0, maxANPP = 0)]
NON_NAdata <- speciesEcoregionTable[!is.na(maxBiomass),]
NAdata <- speciesEcoregionTable[is.na(maxBiomass),]
# replace NA values with ecoregion zone value
source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttributes_kNN_biggerEcoAddition.R')
dd <- biomassAttributes_kNN_biggerEcoAddition(speciesLayers = specieslayersfull,
biomassLayer = biomassmap,
SALayer = samap,
ecoregionMap = simulationMaps$ecoregionMap,
biggerEcoMap = shapefile("M:/data/ecoFramework/Ecoregions/ecoregions.shp"),
NAData = NAdata)
dd
source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttributes_kNN_biggerEcoAddition.R')
dd <- biomassAttributes_kNN_biggerEcoAddition(speciesLayers = specieslayersfull,
biomassLayer = biomassmap,
SALayer = samap,
ecoregionMap = simulationMaps$ecoregionMap,
biggerEcoMap = shapefile("M:/data/ecoFramework/Ecoregions/ecoregions.shp"),
NAData = NAdata)
dd
biggerEcoMap
biggerEcoMap<- shapefile("M:/data/ecoFramework/Ecoregions/ecoregions.shp")
biggerEcoMap
biggerEcoMap@data
biggerEcoMap@data[1:5,]
dev(4)
Plot(simulationMaps$ecoregionMap)
clearPlot()
Plot(simulationMaps$ecoregionMap)
Plot(simulationMaps$initialCommunityMap)
simulationMaps$ecoregion
speciesEcoregionTable
NON_NAdata
NAdata
names(NON_NAdata)
NON_NAdata <- rbind(NON_NAdata, dd[!is.na(maxBiomass), .(ecoregion, species, maxBiomass, maxANPP)])
NON_NAdata <- rbind(NON_NAdata, dd$addData[!is.na(maxBiomass), .(ecoregion, species, maxBiomass, maxANPP)])
dd$addData
NON_NAdata
dd$addData
NON_NAdata <- rbind(NON_NAdata, dd$addData[!is.na(maxBiomass), .(ecoregion, species, maxBiomass, maxANPP, SEP)])
NON_NAdata
NAdata <- dd$addData[is.na(maxBiomass),]
NAdata
biggerEcoMap1<- shapefile("M:/data/ecoFramework/Ecozones/ecozones.shp")
biggerEcoMap1
biggerEcoMap1@data
names(biggerEcoMap1@data)
grep("ECOZONE",names(biggerEcoMap1@data))
names(biggerEcoMap1@data)[grep("ECOZONE",names(biggerEcoMap1@data))] <- "ECOREGION"
biggerEcoMap1@data
NAdata <- speciesEcoregionTable[is.na(maxBiomass),]
NAdata
NAdata <- dd$addData[is.na(maxBiomass),.(ecoregion, species, maxBiomass, maxANPP, SEP)]
NAdata
ecozoneValues <- biomassAttributes_kNN_biggerEcoAddition(speciesLayers = specieslayersfull,
biomassLayer = biomassmap,
SALayer = samap,
ecoregionMap = simulationMaps$ecoregionMap,
biggerEcoMap = biggerEcoMap1,
NAData = NAdata)
ecozoneValues
source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttributes_kNN_biggerEcoAddition.R')
ecozoneValues <- biomassAttributes_kNN_biggerEcoAddition(speciesLayers = specieslayersfull,
biomassLayer = biomassmap,
SALayer = samap,
ecoregionMap = simulationMaps$ecoregionMap,
biggerEcoMap = biggerEcoMap1,
NAData = NAdata)
biggerEcoMap
biggerEcoMap@data
subEcoregion
subEcoregion
subbiggerEcoMap
dev(4)
Plot(subbiggerEcoMap)
subbiggerEcoLevel
subbiggerEcoMap@data
indiEcoregion
indiSubBiggerEcoMap
Plot(indiSubBiggerEcoMap)
indiSubBiggerEcoMap <- biggerEcoMap[subbiggerEcoMap@data$ECOREGION == indiEcoregion,]
Plot(indiSubBiggerEcoMap)
indiSubBiggerEcoMap
indiSubBiggerEcoMap
clearPlot()
Plot(indiSubBiggerEcoMap)
class(indiSubBiggerEcoMap)
a <- SpatialPolygons(indiSubBiggerEcoMap@polygons, proj4string = indiSubBiggerEcoMap@proj4string)
a
Plot(a)
biomassmap
Plot(biomassmap)
b <- extract(biomassmap, a)
source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttributes_kNN_biggerEcoAddition.R')
ecozoneValues <- biomassAttributes_kNN_biggerEcoAddition(speciesLayers = specieslayersfull,
biomassLayer = biomassmap,
SALayer = samap,
ecoregionMap = simulationMaps$ecoregionMap,
biggerEcoMap = biggerEcoMap1,
NAData = NAdata)
subbiggerEcoMap
subbiggerEcoLevel <- unique(subbiggerEcoMap@data$ECOREGION)
subbiggerEcoLevel
subbigEcoMap <- biggerEcoMap[biggerEcoMap@data$ECOREGION %in% subbiggerEcoLevel,]
dev(4)
clearPlot()
Plot(subbigEcoMap)
Plot(biggerEcoMap)
subbiggerEcoMap_Raster <- crop(biomassmap, subbigEcoMap)
install.packages("digest")
install.packages("lazyeval")
install.packages("RandomFields")
install_github("PredictiveEcology/SpaDES", ref = "development")
library("devtools")
library(digest)
install.packages("digest")
installed.packages()
unlist(installed.packages())
unlist(installed.packages())[1]
"digest" %in% unlist(installed.packages())
install.packages("digest")
