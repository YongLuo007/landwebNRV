nonactiveRasterSmall[Which(nonactiveRasterSmall %in% nonecomapcode, cells = TRUE)] <- NA
Plot(nonactiveRasterSmall)
initialCommunityMap[Which(is.na(nonactiveRasterSmall), cells = TRUE)] <- NA
ecoregionMap[Which(is.na(nonactiveRasterSmall), cells = TRUE)] <- NA
clearPlot()
Plot(ecoregionMap, initialCommunityMap)
rm(list = ls())
a <- raster("M:/data/LandCoverOfCanada2005_V1_4/LCC2005_V1_4a.tif")
b <- raster("ecoregionMap.tif")
c <- read.csv("ecoregion.csv", header=T, stringsAsFactor = F) %>%
data.table
d <- readRDS("initialCommMap.rds")
e <- readRDS("initialComm.rds")
f <- data.table(active = c(rep("yes", 16), rep("no", 24)),
mapcode = 1:40)
source('~/GitHub/landwebNRV/landwebNRV/R/nonactiveEcoFromRaster.R')
ls()
library(dplyr); library(data.table); library(raster); library(sp)
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecozones <- shapefile("M:/data/Ecozones/ecozones.shp")
studyarea <- spTransform(studyarea, crs(ecozones))
studyareaEcozone <- raster::intersect(ecozones, studyarea)
ecozones <- sort(unique(studyareaEcozone@data$ZONE_NAME))
ecoDistricts <- shapefile("M:/data/ecoFramework/Ecodistricts/ecodistricts.shp")
allData <- list()
i <- 1
ecozone <- ecozones[1]
studyarea_sub <- studyareaEcozone[studyareaEcozone@data$ZONE_NAME == ecozone,]
specieslayers <- readRDS("C:/Users/yonluo/Documents/GitHub/landwebNRV/speciesLayersStack.rds")
speciesnames <- names(specieslayers)
studyarea_sub <- SpatialPolygons(studyarea_sub@polygons, proj4string = studyarea_sub@proj4string)
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
specieslayerBySpeciesInStudyArea
rm(list=ls())
# these codes to divide study area into several ecozones
# and for each ecozone, ecoregion is defined by ecoDistrict
library(dplyr); library(data.table); library(raster); library(sp)
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecozones <- shapefile("M:/data/Ecozones/ecozones.shp")
studyarea <- spTransform(studyarea, crs(ecozones))
studyareaEcozone <- raster::intersect(ecozones, studyarea)
ecozones <- sort(unique(studyareaEcozone@data$ZONE_NAME))
ecoDistricts <- shapefile("M:/data/ecoFramework/Ecodistricts/ecodistricts.shp")
allData <- list()
i <- 1
for(ecozone in ecozones){
studyarea_sub <- studyareaEcozone[studyareaEcozone@data$ZONE_NAME == ecozone,]
specieslayers <- readRDS("C:/Users/yonluo/Documents/GitHub/landwebNRV/speciesLayersStack.rds")
speciesnames <- names(specieslayers)
studyarea_sub <- SpatialPolygons(studyarea_sub@polygons, proj4string = studyarea_sub@proj4string)
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
activeStatus <- data.table(active = "yes",
ecoregion = 1:1031)
source('~/GitHub/landwebNRV/landwebNRV/R/ecoregionMapProducer.R')
ecoregionFiles <- ecoregionMapProducer(studyAreaRaster = initialCommFiles$initialCommunityMap,
ecoregionMapFull = ecoDistricts,
ecoregionName = "ECODISTRIC",
ecoregionActiveStatus = activeStatus,
studyArea = studyarea_sub)
lcc2005 <- raster("M:/data/LandCoverOfCanada2005_V1_4/LCC2005_V1_4a.tif")
activeStatusTable <- data.table(active = c(rep("yes", 15), rep("no", 25)),
mapcode = 1:40)  # this is based on description
source('~/GitHub/landwebNRV/landwebNRV/R/nonactiveEcoFromRaster.R')
alldataAdded<- nonactiveEcoFromRaster(nonactiveRaster = lcc2005,
activeStatus = activeStatusTable,
ecoregionMap = ecoregionFiles$ecoregionMap,
ecoregion = ecoregionFiles$ecoregion,
initialCommunityMap = initialCommFiles$initialCommunityMap,
initialCommunity = initialCommFiles$initialCommunity)
allData[[i]] <- alldataAdded
i <- i+1
}
getwd()
setwd("C:/Users/yonluo/Documents/GitHub/landwebNRV")
rm(list=ls())
setwd("C:/Users/yonluo/Documents/GitHub/landwebNRV")
# these codes to divide study area into several ecozones
# and for each ecozone, ecoregion is defined by ecoDistrict
library(dplyr); library(data.table); library(raster); library(sp)
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecozones <- shapefile("M:/data/Ecozones/ecozones.shp")
studyarea <- spTransform(studyarea, crs(ecozones))
studyareaEcozone <- raster::intersect(ecozones, studyarea)
ecozones <- sort(unique(studyareaEcozone@data$ZONE_NAME))
ecoDistricts <- shapefile("M:/data/ecoFramework/Ecodistricts/ecodistricts.shp")
allData <- list()
i <- 1
for(ecozone in ecozones){
studyarea_sub <- studyareaEcozone[studyareaEcozone@data$ZONE_NAME == ecozone,]
specieslayers <- readRDS("C:/Users/yonluo/Documents/GitHub/landwebNRV/speciesLayersStack.rds")
speciesnames <- names(specieslayers)
studyarea_sub <- SpatialPolygons(studyarea_sub@polygons, proj4string = studyarea_sub@proj4string)
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
activeStatus <- data.table(active = "yes",
ecoregion = 1:1031)
source('~/GitHub/landwebNRV/landwebNRV/R/ecoregionMapProducer.R')
ecoregionFiles <- ecoregionMapProducer(studyAreaRaster = initialCommFiles$initialCommunityMap,
ecoregionMapFull = ecoDistricts,
ecoregionName = "ECODISTRIC",
ecoregionActiveStatus = activeStatus,
studyArea = studyarea_sub)
lcc2005 <- raster("M:/data/LandCoverOfCanada2005_V1_4/LCC2005_V1_4a.tif")
activeStatusTable <- data.table(active = c(rep("yes", 15), rep("no", 25)),
mapcode = 1:40)  # this is based on description
source('~/GitHub/landwebNRV/landwebNRV/R/nonactiveEcoFromRaster.R')
alldataAdded<- nonactiveEcoFromRaster(nonactiveRaster = lcc2005,
activeStatus = activeStatusTable,
ecoregionMap = ecoregionFiles$ecoregionMap,
ecoregion = ecoregionFiles$ecoregion,
initialCommunityMap = initialCommFiles$initialCommunityMap,
initialCommunity = initialCommFiles$initialCommunity)
allData[[i]] <- alldataAdded
i <- i+1
}
names(allData) <- ecozones
allData
ecozone
ecozones
studyarea_sub
studyarea_sub <- studyareaEcozone[studyareaEcozone@data$ZONE_NAME == ecozone,]
studyarea_sub
speciesnames <- names(specieslayers)
studyarea_sub <- SpatialPolygons(studyarea_sub@polygons, proj4string = studyarea_sub@proj4string)
studyarea_sub
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
saveRDS(studyarea, "studyarea.rds")
saveRDS(ecozones, "ecozones.rds")
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
saveRDS(studyarea, "studyarea.rds")
ecozones <- shapefile("M:/data/Ecozones/ecozones.shp")
saveRDS(ecozones, "ecozones.rds")
saveRDS(ecozones, "ecozones.rds")
saveRDS(ecoDistricts, "ecoDistricts.rds")
rm(list=ls())
setwd("C:/Users/yonluo/Documents/GitHub/landwebNRV/inputs")
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
saveRDS(studyarea, "studyarea.rds")
ecozones <- shapefile("M:/data/Ecozones/ecozones.shp")
saveRDS(ecozones, "ecozones.rds")
rm(list=ls())
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecozones <- shapefile("M:/data/Ecozones/ecozones.shp")
ecoDistricts <- shapefile("M:/data/ecoFramework/Ecodistricts/ecodistricts.shp")
specieslayers <- readRDS("C:/Users/yonluo/Documents/GitHub/landwebNRV/speciesLayersStack.rds")
lcc2005 <- raster("M:/data/LandCoverOfCanada2005_V1_4/LCC2005_V1_4a.tif")
save.image("inputs.RData")
setwd("C:/Users/yonluo/Documents/GitHub/landwebNRV/inputs")
setwd("C:/Users/yonluo/Documents/GitHub/landwebNRV")
library(dplyr); library(data.table); library(raster); library(sp)
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
saveRDS(studyarea, "studyarea.rds")
getwd()
getwd()
studyarea
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
dir()
setwd("C:/Users/yonluo/Documents/GitHub/landwebNRV")
# these codes to divide study area into several ecozones
# and for each ecozone, ecoregion is defined by ecoDistrict
library(dplyr); library(data.table); library(raster); library(sp)
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecozones <- shapefile("M:/data/Ecozones/ecozones.shp")
library(rgdal)
install.packages("rgdal")
install.packages("rgdal")
library(raster)
install.packages("rgdal")
install.packages("rgdal")
ecozones <- shapefile("M:/data/Ecozones/ecozones.shp")
install.packages("rgdal")
install.packages("C:/Users/yonluo/Downloads/rgdal_1.1-9.tar.gz", repos = NULL, type = "source")
rm(list=ls())
setwd("C:/Users/yonluo/Documents/GitHub/landwebNRV")
library(dplyr); library(data.table); library(raster); library(sp)
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecozones <- shapefile("M:/data/Ecozones/ecozones.shp")
ecozones <- shapefile("M:/data/Ecozones/ecozones.shp")
studyarea <- spTransform(studyarea, crs(ecozones))
studyareaEcozone <- raster::intersect(ecozones, studyarea)
rm(list=ls())
setwd("C:/Users/yonluo/Documents/GitHub/landwebNRV")
# these codes to divide study area into several ecozones
# and for each ecozone, ecoregion is defined by ecoDistrict
library(dplyr); library(data.table); library(raster); library(sp)
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecozones <- shapefile("M:/data/Ecozones/ecozones.shp")
studyarea <- spTransform(studyarea, crs(ecozones))
studyareaEcozone <- raster::intersect(ecozones, studyarea)
ecozones <- sort(unique(studyareaEcozone@data$ZONE_NAME))
ecoDistricts <- shapefile("M:/data/ecoFramework/Ecodistricts/ecodistricts.shp")
allData <- list()
i <- 2
specieslayers <- readRDS("C:/Users/yonluo/Documents/GitHub/landwebNRV/speciesLayersStack.rds")
speciesnames <- names(specieslayers)
speciesnames
ecozone
ecozone <- ecozones[2]
ecozone
studyarea_sub <- studyareaEcozone[studyareaEcozone@data$ZONE_NAME == ecozone,]
studyarea_sub
library(SpaDES)
dev(4)
Plot(studyarea_sub)
studyarea_sub <- SpatialPolygons(studyarea_sub@polygons, proj4string = studyarea_sub@proj4string)
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
speciesComMap
speciesComMap
Which(is.na(speciesComMap), cells = TRUE, na.rm = FALSE)
speciesComMap
studyArea
specieslayerBySpecies
speciesComMap <- subset(specieslayerBySpeciesInStudyArea, speciesNames[1])
speciesComMap
Which(is.na(speciesComMap), cells = TRUE, na.rm = FALSE)
speciesComMap[Which(is.na(speciesComMap), cells = TRUE, na.rm = FALSE)] <- 0
Plot(speciesComMap)
speciesComMap
speciesComMap <- as.logical(speciesComMap)
clearPlot()
Plot(speciesComMap)
source('~/GitHub/landwebNRV/landwebNRV/R/ecoregionMapProducer.R')
ecoregionFiles <- ecoregionMapProducer(studyAreaRaster = initialCommFiles$initialCommunityMap,
ecoregionMapFull = ecoDistricts,
ecoregionName = "ECODISTRIC",
ecoregionActiveStatus = activeStatus,
studyArea = studyarea_sub)
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
warnings()
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
warnings()
class(speciesLayers)
crs(speciesLayers)
studyArea
?spTransform
class(crs(speciesLayers))
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
warnings()
warnings()
warnings()
warnings()
assign("last.warning", NULL, envir = baseenv())
warnings()
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
warnings()
ecozones <- shapefile("M:/data/Ecozones/ecozones.shp")
warnings()
studyarea <- spTransform(studyarea, crs(ecozones))
studyareaEcozone <- raster::intersect(ecozones, studyarea)
ecozones <- sort(unique(studyareaEcozone@data$ZONE_NAME))
ecoDistricts <- shapefile("M:/data/ecoFramework/Ecodistricts/ecodistricts.shp")
activeStatus <- data.table(active = "yes",
ecoregion = 1:1031)
allData <- list()
warnings()
i <- 2
specieslayers <- readRDS("C:/Users/yonluo/Documents/GitHub/landwebNRV/speciesLayersStack.rds")
warnings()
speciesnames <- names(specieslayers)
warnings()
ecozones
ecozone <- ecozones[2]
ecozone
studyarea_sub <- studyareaEcozone[studyareaEcozone@data$ZONE_NAME == ecozone,]
warnings()
studyarea_sub <- SpatialPolygons(studyarea_sub@polygons, proj4string = studyarea_sub@proj4string)
warnings()
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
warnings()
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
warnings()
warnings()
warnings()
warnings()
warnings()
warnings()
specieslayerBySpeciesInStudyArea
?subset
assign("last.warning", NULL, envir = baseenv())
warnings()
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
specieslayerBySpeciesInStudyArea
?mask
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
?crop
assign("last.warning", NULL, envir = baseenv())
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
warnings()
studyArea
specieslayerBySpeciesInStudyArea
rm(list=ls())
setwd("C:/Users/yonluo/Documents/GitHub/landwebNRV")
# these codes to divide study area into several ecozones
# and for each ecozone, ecoregion is defined by ecoDistrict
library(dplyr); library(data.table); library(raster); library(sp); library(SpaDES)
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecozones <- shapefile("M:/data/Ecozones/ecozones.shp")
studyarea <- spTransform(studyarea, crs(ecozones))
studyareaEcozone <- raster::intersect(ecozones, studyarea)
ecozones <- sort(unique(studyareaEcozone@data$ZONE_NAME))
ecoDistricts <- shapefile("M:/data/ecoFramework/Ecodistricts/ecodistricts.shp")
activeStatus <- data.table(active = "yes",
ecoregion = 1:1031)
allData <- list()
specieslayers <- readRDS("C:/Users/yonluo/Documents/GitHub/landwebNRV/speciesLayersStack.rds")
speciesnames <- names(specieslayers)
speciesnames
ecozone <- ecozones[1]
studyarea_sub <- studyareaEcozone[studyareaEcozone@data$ZONE_NAME == ecozone,]
studyarea_sub
studyarea_sub <- SpatialPolygons(studyarea_sub@polygons, proj4string = studyarea_sub@proj4string)
studyarea_sub
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
studyArea
specieslayerBySpecies
specieslayerBySpeciesInStudyArea
warnings()
assign("last.warning", NULL, envir = baseenv())
assign("last.warning", NULL, envir = baseenv())
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
warnings()
warnings()
warnings()
warnings()
warnings()
specieslayerBySpeciesInStudyArea[Which(is.na(specieslayerBySpeciesInStudyArea), cells = TRUE, na.rm = FALSE)] <- 0
specieslayerBySpeciesInStudyArea
specieslayerBySpeciesInStudyArea[Which(is.na(specieslayerBySpeciesInStudyArea), cells = TRUE, na.rm = FALSE)] <- 0
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
warnings()
assign("last.warning", NULL, envir = baseenv())
warnings()
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
warnings()
assign("last.warning", NULL, envir = baseenv())
warnings()
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
warnings()
warnings()
warnings()
pixelIndex <- Which(is.na(specieslayerBySpeciesInStudyArea), cells = TRUE)
class(pixelIndex)
specieslayerBySpeciesInStudyArea[c(pixelIndex)] <- 0
specieslayerBySpeciesInStudyArea
assign("last.warning", NULL, envir = baseenv())
warnings()
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
warnings()
warnings()
?Which()
?Which
assign("last.warning", NULL, envir = baseenv())
warnings()
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
warnings()
specieslayerBySpeciesInStudyArea
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
Plot(studyarea)
Plot(studyarea)
Plot(specieslayerBySpeciesInStudyArea)
dev(4)
clearPlot()
Plot(specieslayerBySpeciesInStudyArea)
Plot(specieslayerBySpeciesInStudyArea)
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
clearPlot()
Plot(studyarea)
Plot(studyArea)
clearPlot()
Plot(studyArea)
clearPlot()
Plot(specieslayerBySpecies)
Plot(specieslayerBySpecies)
clearPlot()
Plot(specieslayerBySpeciesInStudyArea)
Plot(studyArea, addTo = "specieslayerBySpeciesInStudyArea")
clearPlot()
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
Plot(studyArea)
Plot(specieslayerBySpecies)
Plot(specieslayerBySpeciesInStudyArea)
Plot(specieslayerBySpeciesInStudyArea)
dd <- setValues(specieslayerBySpeciesInStudyArea, 1)
dd
Plot(dd)
ff <- mask(dd, studyArea)
studyArea
dd
specieslayerBySpeciesInStudyArea
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
saveRDS(specieslayerBySpeciesInStudyArea,"testRaster.RDS")
saveRDS(studyArea,"testPoly.RDS")
warnings()
rm(list=ls())
setwd("C:/Users/yonluo/Documents/GitHub/landwebNRV")
# these codes to divide study area into several ecozones
# and for each ecozone, ecoregion is defined by ecoDistrict
library(dplyr); library(data.table); library(raster); library(sp); library(SpaDES)
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecozones <- shapefile("M:/data/Ecozones/ecozones.shp")
studyarea <- spTransform(studyarea, crs(ecozones))
studyareaEcozone <- raster::intersect(ecozones, studyarea)
ecozones <- sort(unique(studyareaEcozone@data$ZONE_NAME))
ecoDistricts <- shapefile("M:/data/ecoFramework/Ecodistricts/ecodistricts.shp")
activeStatus <- data.table(active = "yes",
ecoregion = 1:1031)
allData <- list()
i <- 2
specieslayers <- readRDS("C:/Users/yonluo/Documents/GitHub/landwebNRV/speciesLayersStack.rds")
speciesnames <- names(specieslayers)
ecozone <- ecozones[1]
studyarea_sub <- studyareaEcozone[studyareaEcozone@data$ZONE_NAME == ecozone,]
studyarea_sub <- SpatialPolygons(studyarea_sub@polygons, proj4string = studyarea_sub@proj4string)
source('~/GitHub/landwebNRV/landwebNRV/R/initialCommunityMapProducer_kNN.R')
initialCommFiles <- initialCommunityMapProducer_kNN(speciesLayers = specieslayers,
speciesNames = speciesnames,
studyArea = studyarea_sub)
warnings()
specieslayerBySpeciesInStudyArea
writeRaster(specieslayerBySpeciesInStudyArea, "testRaster.tif", overwrite = T)
dir()
