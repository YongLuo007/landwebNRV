plot(plotLocation, add = T)
plot(plotLocationwithecoregion, col = "red", add = T)
canadaMap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecoregionMap <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
ecoregionMap <- spTransform(ecoregionMap, crs(canadaMap))
studyarea <- spTransform(studyarea, crs(canadaMap))
studyareawithecoregion <- intersect(ecoregionMap, studyarea)
plotLocation <- SpatialPointsDataFrame(pureStandHeader[,.(Longitude, Latitude)],
pureStandHeader[,.(MeasureID)],
match.ID = TRUE,
proj4string = crs(canadaMap))
plotLocationwithecoregion <- intersect(plotLocation, studyareawithecoregion)
plot(canadaMap, border = "grey")
plot(ecoregionMap, border = "green", add=T)
plot(studyarea, border = "red", add = T)
plot(plotLocation, add = T)
plotLocation
plotLocation
plotLocationwithecoregion
plotLocationwithecoregion@data
canadaMap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecoregionMap <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
studyarea <- spTransform(studyarea, crs(ecoregionMap))
studyareawithecoregion <- intersect(ecoregionMap, studyarea)
plotLocation <- SpatialPointsDataFrame(pureStandHeader[,.(Longitude, Latitude)],
pureStandHeader[,.(MeasureID)],
match.ID = TRUE,
proj4string = crs(ecoregionMap))
plotLocationwithecoregion <- intersect(plotLocation, studyareawithecoregion)
plotLocationwithecoregion
canadaMap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
plotLocation <- SpatialPointsDataFrame(pureStandHeader[,.(Longitude, Latitude)],
pureStandHeader[,.(MeasureID)],
match.ID = TRUE,
proj4string = crs(canadaMap))
plotLocation
plotLocation@data
plotLocation
?SpatialPointsDataFrame
canadaMap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecoregionMap <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
studyarea <- spTransform(studyarea, crs(ecoregionMap))
studyareawithecoregion <- intersect(ecoregionMap, studyarea)
studyareawithecoregion
plotID <- "MeasureID"
pureStandHeader
pureStandHeader[, plotID, with=F]
studyAreaEcoregionMap <- intersect(ecoregionMap, studyarea)
studyAreaEcoregionMap
studyAreaEcoregionMap@data
plotLocation <- pureStandHeader
plotID  <- "MeasureID"
plotLocation <- SpatialPointsDataFrame(plotLocation[,.(Longitude, Latitude)],
plotLocation[, plotID, with = FALSE],
match.ID = TRUE,
proj4string = crs(studyAreaEcoregionMap))
plotLocation
plotNumberEcoregionMap <- intersect(plotLocation, studyAreaEcoregionMap)
plotNumberEcoregionMap
plotNumberEcoregionMap@data
data.table(plotNumberEcoregionMap@data)
ecoregionID <- "ECOZONE"
plotNumberEcoregionTable <- data.table(plotNumberEcoregionMap@data)
plotNumberEcoregionTable
plotNumberEcoregionTable[, plotID, ecozoneID, with = F]
plotNumberEcoregionTable[, c(plotID, ecozoneID), with = F]
plotNumberEcoregionTable[, list(plotID, ecozoneID), with = F]
plotNumberEcoregionTable[, c(plotID, ecoregionID), with = F]
plotNumberEcoregionTable <- data.table(plotNumberEcoregionMap@data)plotNumberEcoregionTable[
, c(plotID, ecoregionID), with = F]
plotNumberEcoregionTable <- data.table(plotNumberEcoregionMap@data)[
, c(plotID, ecoregionID), with = F]
plotNumberEcoregionTable
unique(plotNumberEcoregionTable$ECOZONE)
length(unique(plotNumberEcoregionTable$MeasureID))
?intersect
class(plotID)
source('~/GitHub/landwebNRV/landwebNRV/R/plotsByEcoregion.R')
source('~/GitHub/landwebNRV/landwebNRV/R/plotsByEcoregion.R')
plotsByEcoregion(plotLocation = pureStandHeader, studyAreaEcoregionMap = studyareawithecoregion)
source('~/GitHub/landwebNRV/landwebNRV/R/plotsByEcoregion.R')
plotsByEcoregion(plotLocation = pureStandHeader, studyAreaEcoregionMap = studyareawithecoregion)
rm(list = ls())
load("~/GitHub/landwebNRV/pureStand.RData")
pureStandHeader <- allPlotHeaderDataLongLat[MeasureID %in% pureStand$MeasureID,]
# pureStandbyEcoregion <- plotsByEcoregion(plotLocation = pureStandHeader, studyAreaEcoregionMap = studyareaecoregion)
canadaMap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecoregionMap <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
studyarea <- spTransform(studyarea, crs(ecoregionMap))
studyareawithecoregion <- intersect(ecoregionMap, studyarea)
plotLocation <- SpatialPointsDataFrame(pureStandHeader[,.(Longitude, Latitude)],
pureStandHeader[,.(MeasureID)],
match.ID = TRUE,
proj4string = crs(ecoregionMap))
plotLocationwithecoregion <- intersect(plotLocation, studyareawithecoregion)
canadaMap <- spTransform(canadaMap, crs(ecoregionMap))
plot(canadaMap, border = "grey")
plot(ecoregionMap, border = "green", add=T)
plot(studyarea, border = "red", add = T)
plot(plotLocation, add = T)
plot(plotLocationwithecoregion, col = "red", add = T)
rm(list = ls())
load("~/GitHub/landwebNRV/pureStand.RData")
pureStandHeader <- allPlotHeaderDataLongLat[MeasureID %in% pureStand$MeasureID,]
# pureStandbyEcoregion <- plotsByEcoregion(plotLocation = pureStandHeader, studyAreaEcoregionMap = studyareaecoregion)
canadaMap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecoregionMap <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
studyarea <- spTransform(studyarea, crs(ecoregionMap))
studyareawithecoregion <- intersect(ecoregionMap, studyarea)
plotLocation <- SpatialPointsDataFrame(pureStandHeader[,.(Longitude, Latitude)],
pureStandHeader[,.(MeasureID)],
match.ID = TRUE,
proj4string = crs(ecoregionMap))
plotLocationwithecoregion <- intersect(plotLocation, studyareawithecoregion)
canadaMap <- spTransform(canadaMap, crs(ecoregionMap))
library(SpaDES)
dev(4)
clearPlot()
plot(canadaMap, border = "grey")
plot(ecoregionMap, border = "green", add=T)
plot(studyarea, border = "red", add = T)
plot(plotLocation, add = T)
plot(plotLocationwithecoregion, col = "red", add = T)
clearPlot()
Plot(canadaMap, border = "grey")
clearPlot()
plot(canadaMap, border = "grey")
plot(ecoregionMap, border = "green", add=T)
plot(studyarea, border = "red", add = T)
plot(plotLocation, add = T)
plot(plotLocationwithecoregion, col = "red", add = T)
studyareaecoregion <- raster("~/GitHub/landwebNRV/studyareaecoregion.tif")
clearPlot()
Plot(studyareaecoregion)
plot(studyareaecoregion)
plotsbyEcoregion <- plotsByEcoregion(plotLocation = pureStandHeader, studyAreaEcoregionMap = studyareawithecoregion)
source('~/GitHub/landwebNRV/landwebNRV/R/plotsByEcoregion.R')
load("~/GitHub/landwebNRV/pureStand.RData")
pureStandHeader <- allPlotHeaderDataLongLat[MeasureID %in% pureStand$MeasureID,]
# pureStandbyEcoregion <- plotsByEcoregion(plotLocation = pureStandHeader, studyAreaEcoregionMap = studyareaecoregion)
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecoregionMap <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
studyarea <- spTransform(studyarea, crs(ecoregionMap))
studyareawithecoregion <- intersect(ecoregionMap, studyarea)
plotsbyEcoregion <- plotsByEcoregion(plotLocation = pureStandHeader, studyAreaEcoregionMap = studyareawithecoregion)
plotsbyEcoregion
pureStand
pureStandInEcoregion <- setkey(pureStand, MeasureID)[setkey(plotsbyEcoregion, MeasureID),
nomatch = 0]
pureStandInEcoregion
setnames(pureStandInEcoregion, "ECOZONE", "Ecoregion")
ecoregionSpecies <- unique(pureStandInEcoregion[,.(Ecoregion, Species)],
by = c("Ecoregion", "Species"))
ecoregionSpecies
i <- 1
ecoregionSpecies <- unique(pureStandInEcoregion[,.(Ecoregion, Species)],
by = c("Ecoregion", "Species")) %>%
setkey(.,Ecoregion, Species)
library(dplyr)
ecoregionSpecies <- unique(pureStandInEcoregion[,.(Ecoregion, Species)],
by = c("Ecoregion", "Species")) %>%
setkey(.,Ecoregion, Species)
ecoregionSpecies
i <- 1
print(ecoregionSpecies[i,])
cat(ecoregionSpecies[i,])
speciesdata <- pureStandInEcoregion[Ecoregion == ecoregionSpecies[i,]$Ecoregion &
Species == ecoregionSpecies[i,]$Species,]
speciesdata
plot(Biomass~SA,data=speciesdata)
for(i in 1:NROW(ecoregionSpecies)){
print(ecoregionSpecies[i,])
speciesdata <- pureStandInEcoregion[Ecoregion == ecoregionSpecies[i,]$Ecoregion &
Species == ecoregionSpecies[i,]$Species,]
plot(Biomass~SA,data=speciesdata)
}
for(i in 1:NROW(ecoregionSpecies)){
print(ecoregionSpecies[i,])
speciesdata <- pureStandInEcoregion[Ecoregion == ecoregionSpecies[i,]$Ecoregion &
Species == ecoregionSpecies[i,]$Species,]
plot(Biomass~SA,data=speciesdata)
}
i <- 2
print(ecoregionSpecies[i,])
speciesdata <- pureStandInEcoregion[Ecoregion == ecoregionSpecies[i,]$Ecoregion &
Species == ecoregionSpecies[i,]$Species,]
plot(Biomass~SA,data=speciesdata)
i <- 3
print(ecoregionSpecies[i,])
speciesdata <- pureStandInEcoregion[Ecoregion == ecoregionSpecies[i,]$Ecoregion &
Species == ecoregionSpecies[i,]$Species,]
plot(Biomass~SA,data=speciesdata)
i <- 4
print(ecoregionSpecies[i,])
speciesdata <- pureStandInEcoregion[Ecoregion == ecoregionSpecies[i,]$Ecoregion &
Species == ecoregionSpecies[i,]$Species,]
plot(Biomass~SA,data=speciesdata)
i <- 5
print(ecoregionSpecies[i,])
speciesdata <- pureStandInEcoregion[Ecoregion == ecoregionSpecies[i,]$Ecoregion &
Species == ecoregionSpecies[i,]$Species,]
plot(Biomass~SA,data=speciesdata)
i <- 6
print(ecoregionSpecies[i,])
speciesdata <- pureStandInEcoregion[Ecoregion == ecoregionSpecies[i,]$Ecoregion &
Species == ecoregionSpecies[i,]$Species,]
plot(Biomass~SA,data=speciesdata)
i <- 7
print(ecoregionSpecies[i,])
speciesdata <- pureStandInEcoregion[Ecoregion == ecoregionSpecies[i,]$Ecoregion &
Species == ecoregionSpecies[i,]$Species,]
plot(Biomass~SA,data=speciesdata)
i <- 8
print(ecoregionSpecies[i,])
speciesdata <- pureStandInEcoregion[Ecoregion == ecoregionSpecies[i,]$Ecoregion &
Species == ecoregionSpecies[i,]$Species,]
plot(Biomass~SA,data=speciesdata)
i <- 9
print(ecoregionSpecies[i,])
speciesdata <- pureStandInEcoregion[Ecoregion == ecoregionSpecies[i,]$Ecoregion &
Species == ecoregionSpecies[i,]$Species,]
plot(Biomass~SA,data=speciesdata)
library(quantreg)
speciesdata
i <- 1
speciesdata <- pureStandInEcoregion[Ecoregion == ecoregionSpecies[i,]$Ecoregion &
Species == ecoregionSpecies[i,]$Species,]
quantileReg <- nls(Biomass ~ SSlogis(SA, Asym, mid, scal), data=speciesdata)
coef(quantileReg)
plot(Biomass~SA,data=speciesdata)
quantileReg <- nlrq(Biomass ~ SSlogis(SA, Asym, mid, scal), data=speciesdata)
coef(quantileReg)
quantileReg <- nlrq(Biomass ~ SSlogis(SA, Asym, mid, scal), data=speciesdata, tau = 0.9)
coef(quantileReg)
quantileReg <- nlrq(Biomass ~ SSlogis(SA, Asym, mid, scal), data=speciesdata, tau = 0.5)
coef(quantileReg)
quantileReg <- nlrq(Biomass ~ SSlogis(SA, Asym, mid, scal), data=speciesdata, tau = 0.8)
coef(quantileReg)
quantileReg <- nlrq(Biomass ~ SSlogis(SA, Asym, mid, scal), data=speciesdata, tau = 0.6)
coef(quantileReg)
?glm
library(stats)
nls
fitModel <- nls(speciesdata$Biomass ~ a*(species$SA - b), start=list(a=a,b=b))
a <- 690
b <- 10
fitModel <- nls(speciesdata$Biomass ~ a*(species$SA - b), start=list(a=a,b=b))
fitModel <- nls(speciesdata$Biomass ~ a*(speciesdata$SA - b),
start=list(a = a,b=b))
a
b
speciesdata$Biomass
speciesdata$SA
Biomass <- speciesdata$Biomass
Biomass <- speciesdata$Biomass
SA <- speciesdata$SA
fitModel <- nls(Biomass ~ a*(SA - b),
start = list(a = a, b = b))
fitModel
summary(fitModel)
fitModel <- nls(Biomass ~ a*(SA - b), data = speciesdata
start = list(a = a, b = b))
rm(Biomass, SA)
fitModel <- nls(Biomass ~ a*(SA - b), data = speciesdata,
start = list(a = a, b = b))
fitModel
newdata <- data.table(SA=seq(30, 180, by  = 10))
newdata
lines(newdata$SA, predict(fitModel, newdata))
Biomass <- speciesdata$Biomass
Biomass <- speciesdata$Biomass/10
Biomass
hist(Biomass)
quantile(Biomass, probs = 0.8)
quantile(Biomass, probs = 0.9)
for(i in 1:NROW(ecoregionSpecies)){
print(ecoregionSpecies[i,])
Biomass <- pureStandInEcoregion[Ecoregion == ecoregionSpecies[i,]$Ecoregion &
Species == ecoregionSpecies[i,]$Species,]$Biomass
maxb <- quantile(Biomass, probs = 0.9)
ecoregionSpecies[i, maxB:=maxb]
}
ecoregionSpecies
ecoregionSpecies
for(i in 1:NROW(ecoregionSpecies)){
print(ecoregionSpecies[i,])
Biomass <- pureStandInEcoregion[Ecoregion == ecoregionSpecies[i,]$Ecoregion &
Species == ecoregionSpecies[i,]$Species,]$Biomass
maxb <- quantile(Biomass/10, probs = 0.9)
ecoregionSpecies[i, maxB:=maxb]
}
ecoregionSpecies
ecoregionSpecies
ecoregionSpecies[Species == "jack pine",]
ecoregionSpecies[Species == "white birch",]
pureStandInEcoregion[Ecoregion == 6 &
Species == "jack pine",]
dd <- pureStandInEcoregion[Ecoregion == 6 &
Species == "jack pine",]
hist(dd$Biomass/10)
plot(dd$Biomass/10~dd$SA)
specieses <- unique(ecoregionSpecies$Species)
specieses <- unique(ecoregionSpecies$Species)
for(species in specieses){
print(ecoregionSpecies[Species == species,])
}
ls()
MBPSPtreeData
for(i in 1:NROW(ecoregionSpecies)){
print(ecoregionSpecies[i,])
Biomass <- pureStandInEcoregion[Ecoregion == ecoregionSpecies[i,]$Ecoregion &
Species == ecoregionSpecies[i,]$Species,]$Biomass
maxb <- quantile(Biomass/10, probs = 0.8)
ecoregionSpecies[i, maxB:=maxb]
}
specieses <- unique(ecoregionSpecies$Species)
for(species in specieses){
print(ecoregionSpecies[Species == species,])
}
ls()
rm(list=ls())
workPath <- "~/GitHub/landwebNRV"
load(file.path(workPath, "alldata_purified.RData"))
ls()
source('~/GitHub/landwebNRV/plotlevelBiomassProcess.R')
ls()
allTreeData
ls()
ulist(ls())
unlist(ls())
ls()
rm(list=c("ABPSPoutput",                    "ABPSPtreeData"))
ls()
allPlotHeaderData
ls(, pattern = "output")
rm(list=ls(, pattern = "output"))
ls()
allPlotHeaderData <- allPlotHeaderDataLongLat
ls(, pattern = "treeData")
rm(list=ls(, pattern = "treeData"))
ls()
source('~/GitHub/landwebNRV/plotlevelBiomassProcess.R')
ls()
source('~/GitHub/landwebNRV/plotlevelBiomassProcess.R')
ls()
source('~/GitHub/landwebNRV/landwebNRV/R/plotsByEcoregion.R')
load("~/GitHub/landwebNRV/pureStand.RData")
pureStandHeader <- allPlotHeaderDataLongLat[MeasureID %in% pureStand$MeasureID,]
pureStandHeader <- allPlotHeaderData[MeasureID %in% pureStand$MeasureID,]
pureStand
allPlotHeaderData
rm(list=ls())
load("~/GitHub/landwebNRV/pureStand.RData")
ls()
allPlotHeaderData
source('~/GitHub/landwebNRV/plotlevelBiomassProcess.R')
source('~/GitHub/landwebNRV/landwebNRV/R/plotsByEcoregion.R')
load("~/GitHub/landwebNRV/pureStand.RData")
pureStandHeader <- allPlotHeaderData[MeasureID %in% pureStand$MeasureID,]
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecoregionMap <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
studyarea <- spTransform(studyarea, crs(ecoregionMap))
studyareawithecoregion <- intersect(ecoregionMap, studyarea)
?intersect
library(raster)
studyareawithecoregion <- intersect(ecoregionMap, studyarea)
ecoregionMap
studyarea
?as.vector
studyarea
ecoregionMap <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
studyarea <- spTransform(studyarea, crs(ecoregionMap))
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
studyarea <- spTransform(studyarea, crs(ecoregionMap))
studyareawithecoregion <- intersect(ecoregionMap, studyarea)
library(data.table)
library(dplyr)
library(rgdal)
library(sp)
library(raster)
rm(list=ls())
source('~/GitHub/landwebNRV/landwebNRV/R/plotsByEcoregion.R')
load("~/GitHub/landwebNRV/pureStand.RData")
pureStandHeader <- allPlotHeaderData[MeasureID %in% pureStand$MeasureID,]
# pureStandbyEcoregion <- plotsByEcoregion(plotLocation = pureStandHeader, studyAreaEcoregionMap = studyareaecoregion)
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecoregionMap <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
studyarea <- spTransform(studyarea, crs(ecoregionMap))
studyareawithecoregion <- intersect(ecoregionMap, studyarea)
studyareawithecoregion
plotsbyEcoregion <- plotsByEcoregion(plotLocation = pureStandHeader,
studyAreaEcoregionMap = studyareawithecoregion)
plotsbyEcoregion
pureStandInEcoregion <- setkey(pureStand, MeasureID)[setkey(plotsbyEcoregion, MeasureID),
nomatch = 0]
pureStandInEcoregion
setnames(pureStandInEcoregion, "ECOZONE", "Ecoregion")
ecoregionSpecies <- unique(pureStandInEcoregion[,.(Ecoregion, Species)],
by = c("Ecoregion", "Species")) %>%
setkey(.,Ecoregion, Species)
ecoregionSpecies
for(i in 1:NROW(ecoregionSpecies)){
print(ecoregionSpecies[i,])
Biomass <- pureStandInEcoregion[Ecoregion == ecoregionSpecies[i,]$Ecoregion &
Species == ecoregionSpecies[i,]$Species,]$Biomass
maxb <- quantile(Biomass/10, probs = 0.8)
ecoregionSpecies[i, maxB:=maxb]
}
specieses <- unique(ecoregionSpecies$Species)
for(species in specieses){
print(ecoregionSpecies[Species == species,])
}
pureStandInEcoregion
library(ggplot2)
BBYSAfigure <- ggplot(data = pureStandInEcoregion,
aes(x = SA, y = Biomass, colour = Ecoregion))+
geom_point()
BBYSAfigure
BBYSAfigure <- ggplot(data = pureStandInEcoregion[Species == "jack pine"],
aes(x = SA, y = Biomass, colour = Ecoregion))+
geom_point()
BBYSAfigure
pureStandInEcoregion[, Ecoregion:=as.factor(Ecoregion)]
BBYSAfigure <- ggplot(data = pureStandInEcoregion[Species == "jack pine"],
aes(x = SA, y = Biomass, colour = Ecoregion))+
geom_point()
BBYSAfigure
BBYSAfigure <- ggplot(data = pureStandInEcoregion[Species == "black spruce"],
aes(x = SA, y = Biomass, colour = Ecoregion))+
geom_point()
BBYSAfigure
BBYSAfigure <- ggplot(data = pureStandInEcoregion[Species == "white birch"],
aes(x = SA, y = Biomass, colour = Ecoregion))+
geom_point()
BBYSAfigure
dir("M:/data/kNN", pattern = ".tif")
raster(file.path(workPath, "Abie_Bal.tif"))
workPath <- "M:/data/kNN"
raster(file.path(workPath, "Abie_Bal.tif"))
abie_bal <- raster(file.path(workPath, "Abie_Bal.tif"))
plot(abie_bal)
dev(4)
library(SpaDES)
dev(4)
Plot(abie_bal)
unique(getValues(abie_bal))
range(getValues(abie_bal))
range(getValues(abie_bal), na.rm=T)
Plot(abie_bal, border="black")
abie_bal
canadaMap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
Plot(canadaMap)
clearPlot()
Plot(canadaMap)
crs(abie_bal)
crs(abie_bal) <- crs(canadaMap)
abie_bal
Plot(abie_bal, addTo = "canadaMap")
abie_bal1 <- spTransform(abie_bal, crs(canadaMap))
canadaMap
dd <- raster("~/GitHub/landwebNRV/studyareaecoregion.tif")
dd <- raster("~/landwebNRV/studyareaecoregion.tif")
dd <- raster("~/LandWeb/studyareaecoregion.tif")
dd
abie_bal
crs(dd) <- crs(canadaMap)
dd
clearPlot()
dev(4)
clearPlot()
Plot(abie_bal)
Plot(dd, addTo = "abie_bal")
clearPlot()
Plot(dd)
plot(dd)
clearPlot()
plot(abie_bal)
plot(dd, add = T)
canadaMap
canadaMap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
studyarea <- readRDS("C:/Users/yonluo/Documents/LandWeb/landwebsimplePoly.rds")
ecoregionMap <- rgdal::readOGR("M:/data/Ecozones/ecozones.shp",
layer = "ecozones")
studyarea <- spTransform(studyarea, crs(ecoregionMap))
studyareawithecoregion <- intersect(ecoregionMap, studyarea)
ecoregionMap
canadaMap <- spTransform(canadaMap, crs(ecoregionMap))
canadaMap
canadaMap <- shapefile("~/GIS DataBase/Canada/Canada.shp")
canadaMap
crs(dd) <- crs("+proj=longlat +ellps=GRS80 +no_defs")
dd
canadaMap <- spTransform(canadaMap, crs("+proj=longlat +ellps=GRS80 +no_defs"))
canadaMap
crs(abie_bal) <- crs("+proj=longlat +ellps=GRS80 +no_defs")
abie_bal
abie_bal
ff <- rasterToPolygons(abie_bal)
