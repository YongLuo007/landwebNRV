{
    "contents" : "################################################################################\n#' purify Alberta mature PSP data that derived from original DAT files\n#' \n#' \n#' @param treeData  data table, which is the tree data from DAT file, recordType == 2\n#'\n#' \n#' @param headerData,  data table. recordType == 1           \n#'        \n#'\n#' @return  a data tables, the first one contains successfully standardized species.\n#'          the newSpeciesName is the standardized name, unknown means the species in \n#'          the original species table can not be found according to manual\n#'                      \n#'\n#' @note no note\n#'\n#' @seealso no\n#'\n#' @include \n#' @export\n#' @docType methods\n#' @rdname dataPurification_ABMature\n#'\n#' @author Yong Luo\n#'\n#' @examples\n#' \\dontrun{\n#' \n#' }\nsetGeneric(\"dataPurification_ABMature\", function(treeData, headerData) {\n  standardGeneric(\"dataPurification_ABMature\")\n})\n#' @export\n#' @rdname standardizeSpeciesName\nsetMethod(\n  \"dataPurification_ABMature\",\n  signature = c(speciesTable = \"data.table\", \n                forestInventorySource = \"character\"),\n  definition = function(speciesTable, forestInventorySource) {\n    rm(list=ls())\n    pathw <- \"C:/Users/yonluo/Documents/LandWeb/Data/AB\"\n    treeData <- read.csv(file.path(pathw, \"ABMatureTreeData.csv\"),\n                         header=T,\n                         stringsAsFactor = F) %>%\n      data.table\n    \n    locations <- read.csv(file.path(pathw, \"plotLocation.csv\"),\n                         header=T,\n                         stringsAsFactor = F) %>%\n      data.table\n    treedata <- treeData[Treenumber != 0,]\n    \n    SAInfor <- treeData[Treenumber == 0 & (!is.na(DBHage) | !is.na(Stumpage)),]\n    SADiff <- as.integer(mean(SAInfor[!is.na(DBHage) & !is.na(Stumpage)]$Stumpage-\n                                SAInfor[!is.na(DBHage) & !is.na(Stumpage)]$DBHage))\n    SAInfor <- SAInfor[!is.na(DBHage) & is.na(Stumpage), Stumpage:=DBHage+SADiff][\n      ,.(Groupnumber, Plotnumber, MeasureYear, Stumpage)]\n    SAInfor[,firstMeasureYear:=min(MeasureYear), by = c(\"Groupnumber\")][\n      ,treeAge:=Stumpage-MeasureYear+firstMeasureYear]\n    SAInfor <- SAInfor[,.(Year = mean(firstMeasureYear), SA = round(mean(treeAge))), \n                       by = c(\"Groupnumber\")]\n    \n    \n    \n    \n  })",
    "created" : 1460997127944.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "916530909",
    "id" : "C7EE0317",
    "lastKnownWriteTime" : 1461112213,
    "path" : "~/GitHub/landwebNRV/landwebNRV/R/dataPurification_ABMature.R",
    "project_path" : "R/dataPurification_ABMature.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}