{
    "contents" : "################################################################################\n#' this function is to classify ecoregion in to study region \n#' based on ecoregion map and study area map\n#' \n#' @param studyAreaMap  SpatialPolygons. This is study area map.\n#'\n#' \n#' @param ecoregionMap,  SpatialPolygonsDataFrame. It contains ecoregion information.\n#'        \n#' \n#' @param cellSize  Numeric. Determine the cell size for the generated map\n#'        Default is 200 meters\n#'\n#' @return Two objects: studyareaecoregion is RasterLayer \n#'                      and attributesTable is data table\n#'\n#' @importFrom\n#'\n#' @note no note\n#'\n#' @seealso no\n#'\n#' @include \n#' @export\n#' @docType methods\n#' @rdname ecoregionClassification\n#'\n#' @author Yong Luo\n#'\n#' @examples\n#' \\dontrun{\n#' \n#' }\nsetGeneric(\"ecoregionClassification\", function(studyAreaMap, ecoregionMap, cellSize) {\n  standardGeneric(\"ecoregionClassification\")\n})\n\n#' @export\n#' @rdname ecoregionClassification\nsetMethod(\n  \"ecoregionClassification\",\n  signature = c(studyAreaMap = \"SpatialPolygons\", \n                ecoregionMap = \"SpatialPolygonsDataFrame\",\n                cellSize = \"numeric\"),\n  definition = function(studyAreaMap, \n                        ecoregionMap,\n                        cellSize) {\n    studyAreaMap <- sp::spTransform(studyAreaMap, crs(ecoregionMap))\n    studyareaecoregion <- raster::crop(ecoregionMap, extent(studyAreaMap))\n    r <- raster(ncol=round(1000*earthDist(long1=extent(studyareaecoregion)[1],\n                                          lat1=extent(studyareaecoregion)[3],\n                                          long2=extent(studyareaecoregion)[1],\n                                          lat2=extent(studyareaecoregion)[4]))/cellSize,\n                nrow=round(1000*earthDist(long1=extent(studyareaecoregion)[1],\n                                          lat1=extent(studyareaecoregion)[3],\n                                          long2=extent(studyareaecoregion)[2],\n                                          lat2=extent(studyareaecoregion)[3]))/cellSize)# based on south size )\n    extent(r) <- extent(studyareaecoregion)\n    crs(r) <- crs(studyareaecoregion)\n    studyarea1 <- rasterize(studyAreaMap, r, 1)\n    studyareaecoregion <- rasterize(studyareaecoregion, r, \"ECOZONE\")\n    studyareaecoregion <- raster::mask(studyareaecoregion, studyAreaMap)\n    attributesTable <- data.table::data.table(ecoregionMap@data)\n    attributesTable <- attributesTable[ECOZONE %in% unique(getValues(studyareaecoregion)),]\n    return(list(studyareaecoregion = studyareaecoregion,\n                attributesTable = attributesTable))\n  })\n\n#' @export\n#' @rdname ecoregionClassification\nsetMethod(\n  \"ecoregionClassification\",\n  signature = c(studyAreaMap = \"SpatialPolygons\",\n                ecoregionMap = \"SpatialPolygonsDataFrame\",\n                cellSize = \"missing\"),\n  definition = function(studyAreaMap, ecoregionMap) {\n    ecoregionClassification(studyAreaMap = studyAreaMap, \n                            ecoregionMap = ecoregionMap, \n                            cellSize = 200)\n  })    \n\n# classify ecoregion based ecoregion map in the study region\n\n\n\nearthDist <- function (long1, lat1, long2, lat2)\n{\n  rad <- pi/180\n  a1 <- lat1 * rad\n  a2 <- long1 * rad\n  b1 <- lat2 * rad\n  b2 <- long2 * rad\n  dlon <- b2 - a2\n  dlat <- b1 - a1\n  a <- (sin(dlat/2))^2 + cos(a1) * cos(b1) * (sin(dlon/2))^2\n  c <- 2 * atan2(sqrt(a), sqrt(1 - a))\n  R <- 6378.145\n  d <- R * c\n  return(d)\n}\n\n\n\n\n\n\n",
    "created" : 1461716049572.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1573376516",
    "id" : "7C42329C",
    "lastKnownWriteTime" : 1460591108,
    "path" : "~/GitHub/landwebNRV/landwebNRV/R/ecoregionClassification.R",
    "project_path" : "R/ecoregionClassification.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}