{
    "contents" : "# package requirements\nlibrary(data.table)\nlibrary(dplyr)\nlibrary(rgdal)\n# these codes are for organize the sampling data for NWT\nsetwd(\"~/PSPs/NT/data\")\n\nplotdata <- read.csv(\"PLOT.csv\",header=TRUE,stringsAsFactor=FALSE)\nplotdata <- data.table(plotdata)\n# check whether the one plcot has multiple records in plotdata\nlength(unique(plotdata$PLOT_CODE))==nrow(plotdata) # TRUE means each plot has a unique record\n# gathering location information in plotdata\n# the location information in this dataset can be found in three ways: 1 by Lat_DEC, Long_DEC\n# 2. by LAT_DEG and so on\n# 3. by UTM\nsetnames(plotdata,c(\"Lat_DEC\",\"Long_dec\"),c(\"Latitude\",\"Longitude\"))\nplotdata[!is.na(LAT_DEG) & is.na(LAT_MIN),LAT_MIN:=0]\nplotdata[!is.na(LAT_DEG) & is.na(LAT_SEC),LAT_SEC:=0]\nplotdata[!is.na(LAT_DEG) & is.na(LONG_MIN),LONG_MIN:=0]\nplotdata[!is.na(LAT_DEG) & is.na(LONG_SEC),LONG_SEC:=0]\n\nplotdata[(is.na(Latitude) | Latitude==0) & (!is.na(LAT_DEG) & !is.na(LONG_DEG)),\n         ':='(Latitude=LAT_DEG+LAT_MIN/60+LAT_SEC/3600,\n              Longitude=LONG_DEG+LONG_MIN/60+LONG_SEC/3600)][,':='(LONG_DEG=NULL,LONG_MIN=NULL,LONG_SEC=NULL,\n                                                                   LAT_DEG=NULL,LAT_MIN=NULL,LAT_SEC=NULL)]\n\n# additional location file gives the additional locations that may not be provided by plotdata\nadditionalLocations <- read.csv(\"AdditionalLocations.csv\",header=TRUE,stringsAsFactor=FALSE)\nadditionalLocations <- data.table(additionalLocations)[LATITUDE!=0,.(PROJ_CODE,\n                                                                     SAMPLE,PLOT,LATITUDE,LONGITUDE)]\nadditionalLocations$SAMPLE <- as.factor(additionalLocations$SAMPLE)\nsetnames(additionalLocations,\"PROJ_CODE\",\"PROJECT_CODE\")\nplotdata <- dplyr::left_join(plotdata,additionalLocations,by=c(\"PROJECT_CODE\",\"SAMPLE\",\"PLOT\")) %>%\n  data.table\nplotdata[(is.na(Latitude) | Latitude==0),':='(Latitude=LATITUDE,Longitude=LONGITUDE)]\nplotdata_LatLocations <- plotdata[!is.na(Latitude) | Latitude!=0][,Longitude:=-abs(Longitude)]\nplotdata_UTMLocations <- plotdata[which(!(plotdata$PLOT_CODE %in% plotdata_LatLocations$PLOT_CODE))]\nplotdata_UTMLocations <- plotdata_UTMLocations[!is.na(ZONE) & !is.na(EASTING) & !is.na(NORTHING)]\n\n\n# convert UTM locations to latitude\nutm_longlat_data <- plotdata_UTMLocations[1,':='(Longitude=0,Latitude=0)][0,]\nfor (i in unique(plotdata_UTMLocations$ZONE)){\n  zonedata <- plotdata_UTMLocations[ZONE==i]\n  zoneutmcoor<-SpatialPoints(cbind(zonedata$EASTING,zonedata$NORTHING),\n                             proj4string=CRS(paste(\"+proj=utm +zone=\",i,sep=\"\")))\n  zonelonglatcoor<-spTransform(zoneutmcoor,CRS(\"+proj=longlat\"))\n  zonelonglatcoor <- setnames(data.table(attributes(zonelonglatcoor)$coords),\n                              c(\"Long\",\"Lat\"))\n  zonedata[,':='(Longitude=zonelonglatcoor$Long,Latitude=zonelonglatcoor$Lat)]\n  utm_longlat_data <- rbindlist(list(utm_longlat_data,zonedata))\n}\n\nplotdata_withLocations <- data.table(rbind(plotdata_LatLocations,utm_longlat_data))[\n  ,.(PROJECT_CODE,SAMPLE,PLOT,PLOT_CODE,Latitude,Longitude)]\n\n# remove the plots that do not have measurement year\nplotdata_withMeasureYear <- plotdata[Year!=1900][,.(PROJECT_CODE,SAMPLE,PLOT,\n                                                    PLOT_CODE,Year,PLOT_TYPE,SIZE,fc_id)]\nunique(plotdata_withMeasureYear$PLOT_TYPE)\n#[1] \"F\" \"P\" \"L\" \"T\" \"C\"\n# F is fixed radius plot\n# P is prism or variable radius plot\n# L is psp fixed radius\n# T is TSP\n# C is cummulative voloum # what is this????\nnrow(plotdata_withMeasureYear[PLOT_TYPE==\"C\" | PLOT_TYPE==\"t\"]) # 25 PLOTS\nnrow(plotdata_withMeasureYear[PLOT_TYPE==\"F\" | PLOT_TYPE==\"L\"]) # 6134 plots\nnrow(plotdata_withMeasureYear[PLOT_TYPE==\"P\"]) # 16961 plots\n\ntreedata <- read.csv(\"TREE.csv\",header=TRUE,stringsAsFactor=FALSE)\ntreedata <- data.table(treedata)\nlength(unique(treedata$PLOT_CODE))\n\n# the link between treedata and plot data is PLOT_CODE\nsetkey(treedata,PLOT_CODE)\nsetkey(plotdata_withMeasureYear,PLOT_CODE)\ntreedata <- treedata[plotdata_withMeasureYear,nomatch=0]\n# measurement year range\nrange(treedata$Year) # 1977 to 2015\nlength(unique(treedata$PLOT_CODE))\n\ntreedatasummary <- treedata[,.(NofTree=length(DBH),Year=mean(Year),\n                               Plot_Type=PLOT_TYPE[1],Size=mean(SIZE,na.rm=TRUE),FC_ID=mean(fc_id)),\n                            by=PLOT_CODE]\ntreedatasummary <- dplyr::left_join(treedatasummary,plotdata_withLocations,by=\"PLOT_CODE\") %>%\n  data.table\n\n# add stand age information from the geodatabase NT_FORCOV_ATT.gdb\n# SAinfor.csv was attribute table output from the geodatabase\n# the linkage between treedatasummary and SAinfor is FC_ID\n# the origin column contains the year when the stands originate\nSAinfor <- read.csv(\"SA_infor.csv\",header=TRUE,stringsAsFactor=FALSE)\n\nSAinfor <- data.table(SAinfor)[!is.na(ORIGIN) & ORIGIN!=0 & FC_ID!=0][,.(FC_ID,ORIGIN)]\n\nsetnames(SAinfor,\"ORIGIN\",\"OriginYear\")\n\ntreedatasummary <- dplyr::left_join(treedatasummary,SAinfor,by=\"FC_ID\") %>%\n  data.table\ntreedatasummary[!is.na(OriginYear),SA:=Year-OriginYear]\n\n\n# \n\n",
    "created" : 1460758033257.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2308004997",
    "id" : "514B212",
    "lastKnownWriteTime" : 1460761257,
    "path" : "~/PSPs/NT/data/process.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled2"
    },
    "source_on_save" : false,
    "type" : "r_source"
}