{
    "contents" : "################################################################################\n#' purify BC PSP data \n#' \n#' \n#' @param treeDataRaw  data table, which is the raw tree data from DAT file, recordType == 2\n#'                  treeData can be obtained using obtainTreeDataAB function\n#'\n#' \n#' @param headDataRaw data.table, which is PSPDATA2015B, provided by AB\n#'        \n#'\n#' @return  two data tables, the first one head data, which contains the location and SA info.\n#'                           the second one is purified tree data, which contains inividual tree infor.\n#'                           for the tree data, all trees are alive.\n#'                      \n#'\n#' @note no note\n#'\n#' @seealso no\n#'\n#' @include \n#' @export\n#' @docType methods\n#' @rdname dataPurification_BC\n#'\n#' @author Yong Luo\n#'\n#' @examples\n#' \\dontrun{\n#' \n#' }\nsetGeneric(\"dataPurification_BC\", function(treeDataRaw, headDataRaw) {\n  standardGeneric(\"dataPurification_BC\")\n})\n#' @export\n#' @rdname dataPurification_BC\nsetMethod(\n  \"dataPurification_BC\",\n  signature = c(treeDataRaw = \"data.table\", \n                headDataRaw = \"data.table\"),\n  definition = function(treeDataRaw, headDataRaw) {\n    # purifying headData\n    # like AB data, the BC PSP have two level heirachical design (SAMP_ID and plot)\n    \n    # get the plots with SA\n    headDataRaw <- headDataRaw[tot_stand_age != -99,][\n      ,':='(utmtimes = length(unique(utm_zone)),\n            eastingtimes = length(unique(utm_easting)),\n            northingtimes = length(unique(utm_northing)),\n            SAtimes = length(unique(tot_stand_age)),\n            plotsizetimes = length(unique(area_pm)),\n            standorigtimes = length(unique(stnd_org)),\n            treatmenttimes = length(unique(treatment))),\n      by = SAMP_ID]\n    # unique(headDataRaw$utmtimes)#1\n    # unique(headDataRaw$eastingtimes)#1\n    # unique(headDataRaw$northingtimes)# 1\n    # unique(headDataRaw$SAtimes) # no NA\n    # unique(headDataRaw$plotsizetimes)#1\n    # unique(headDataRaw$standorigtimes) # 1\n    \n    \n    # select the natural originated and untreated  \n    headDataRaw <- headDataRaw[stnd_org == \"N\" | stnd_org == \"F\",]\n                               \n    headDataRaw[,treatmenttimes := length(unique(treatment)), by = c(\"SAMP_ID\", \"meas_yr\")]\n    # unique(headDataRaw$treatmenttimes) # 1 2\n    headDataRaw <- headDataRaw[treatmenttimes == 1 & treatment == \"UNTREATED\", .(SAMP_ID, no_plots, utm_zone, utm_easting,\n                 utm_northing, area_pm, tot_stand_age,\n                 meas_yr)]\n    \n\n    headDataRaw[, baseYear := min(meas_yr),\n                by = SAMP_ID]\n    headDataRaw[, baseSA := as.integer(tot_stand_age-(meas_yr-baseYear))]\n    # get the plots with locations\n    headData <- headDataRaw[!is.na(utm_zone) & !is.na(utm_easting) & !is.na(utm_northing),]\n    # get plots with plot size\n    headData <- headData[!is.na(area_pm),][,':='(tot_stand_age = NULL)]\n    names(headData)[1:7] <- c(\"SampleID\", \"Nofplot\", \"Zone\", \"Easting\",\n                              \"Northing\", \"Plotsize\", \"Measureyear\")\n    headData <- unique(headData, by = c(\"SampleID\", \"Measureyear\"))\n    \n    smpIDbyYear <- headData[,.(SampleID, Measureyear)]\n    \n    # for tree data\n    setnames(treeDataRaw, c(\"SAMP_ID\", \"plot_no\"),\n             c(\"SampleID\", \"Plotnumber\"))\n    treeData <- treeDataRaw[SampleID %in% unique(headData$SampleID),]\n    # range(treeData$meas_yr) # 1926 2014\n    # unique(treeData$Plotnumber) # 01 02 03\n    treeData <- treeData[sub_plot_tree == \"N\",][, Plotnumber := as.numeric(Plotnumber)]\n    treeData <- treeData[tree_cls == 1 | tree_cls == 2,.(SampleID, Plotnumber, meas_yr, tree_no, species,\n                            dbh, height)]\n    # unique(treeData$ld)\n    names(treeData)[3:7] <- c(\"Measureyear\", \"Treenumber\", \"Species\", \"DBH\", \"Height\")\n    treeData <- setkey(treeData, SampleID, Measureyear)[setkey(smpIDbyYear, SampleID, Measureyear), \n                                                        nomatch = 0]\n    headDataNew <- unique(treeData[,.(SampleID, Plotnumber)], by = c(\"SampleID\", \"Plotnumber\"))\n    headDataNew[,PlotID:=as.numeric(row.names(headDataNew))]\n    treeData <- setkey(treeData, SampleID, Plotnumber)[setkey(headDataNew, SampleID, Plotnumber),\n                                                      nomatch = 0]\n    \n    headDataAdded <- unique(headData, by = c(\"SampleID\"))\n    headData <- setkey(headDataNew, SampleID)[setkey(headDataAdded, SampleID), nomatch=0]\n    return(list(treeData = treeData, headData = headData))\n})\n",
    "created" : 1461191541983.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2892373317",
    "id" : "CA65827",
    "lastKnownWriteTime" : 1461278690,
    "path" : "~/GitHub/landwebNRV/landwebNRV/R/dataPurification_BCMature.R",
    "project_path" : "R/dataPurification_BCMature.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}