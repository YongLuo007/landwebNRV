{
    "contents" : "################################################################################\n#' this function is to classify ecoregion in to study region \n#' based on ecoregion map and study area map\n#' \n#' @param filePath  Character string. The path lead to the fold that contains the data.\n#'\n#' \n#' @param pspType,  Character string. It tells which data source from,\n#'                  ie., Mature or Juvenile. It must be one of these\n#'        \n#'\n#' @return Two objects: studyareaecoregion is RasterLayer \n#'                      and attributesTable is data table\n#'\n#' @note no note\n#'\n#' @seealso no\n#'\n#' @include \n#' @export\n#' @docType methods\n#' @rdname obtainTreeDataAB\n#'\n#' @author Yong Luo\n#'\n#' @examples\n#' \\dontrun{\n#' \n#' }\nsetGeneric(\"obtainTreeDataAB\", function(filePath, pspType) {\n  standardGeneric(\"obtainTreeDataAB\")\n})\n\n#' @export\n#' @rdname obtainTreeDataAB\nsetMethod(\n  \"obtainTreeDataAB\",\n  signature = c(filePath = \"character\", \n                pspType = \"character\"),\n  definition = function(filePath, \n                        pspType) {\n    \n    tepdir <- tempdir()\n    filePath <- \"C:/Users/yonluo/Documents/PSPs/AB/ESRDMaturePSPs2013\"\n    \n    for(i in dir(filePath, pattern = \".DAT\")[1:5]){\n      if(file.exists(file.path(tepdir, \"temp.csv\"))){\n        file.remove(file.path(tepdir, \"temp.csv\"))\n      }\n      file.copy(file.path(filePath, i),file.path(tepdir, \"temp.csv\"))\n      mdata<-read.csv(file.path(tepdir, \"temp.csv\"),\n                      header = FALSE,\n                      stringsAsFactors = FALSE) \n      headdata1 <- headdata(mdata) %>%\n        data.table\n      headdata1[Record]\n      write.csv(headdata1,\n                file.path(tepdir,\"headdatatemp.csv\"),\n                row.names = FALSE)\n      headdata1 <- read.csv(file.path(tepdir, \"headdatatemp.csv\"),\n                            header = TRUE,\n                            stringsAsFactors = FALSE)\n      headdata1 <- data.table(headdata1)[Recordtype==1,]\n      totalheaddata <- rbindlist(list(totalheaddata, headdata1))\n      \n      treedata1 <- treedata(mdata)\n      write.csv(treedata1,\n                file.path(tepdir, \"treedatatemp.csv\"),\n                row.names = FALSE)\n      treedata1 <- read.csv(file.path(tepdir, \"treedatatemp.csv\"),\n                            header = TRUE,\n                            stringsAsFactors = FALSE)\n      treedata1 <- data.table(treedata1)[Recordtype==2,]\n      totaltreedata <- rbindlist(list(totaltreedata,treedata1))\n      \n      regendata1 <- regendata(mdata)\n      write.csv(regendata1,\n                file.path(tepdir, \"regendatatemp.csv\"),\n                row.names = FALSE)\n      regendata1 <- read.csv(file.path(tepdir, \"regendatatemp.csv\"),\n                             header = TRUE,\n                             stringsAsFactors = FALSE)\n      regendata1 <- data.table(regendata1)[Recordtype==3, ]\n      totalregendata <- rbindlist(list(totalregendata,regendata1))\n      \n      if(nrow(treedata1)+nrow(headdata1)+nrow(regendata1) != nrow(mdata)){\n        \n        cat(\"please check the file\", i, \"\\n\")\n      }\n    }\n    \n    \n    \n    \n    \n  })\n\n\n\nheaddata<-function(data)\n{n<-nrow(data)\n output<-data.table(matrix(nrow=n,ncol=33))\n for(i in 1:n)\n { irow<-as.character(data[i,1])\n   output[i,1]<-substr(irow,1,2)\n   output[i,2]<-substr(irow,3,12)\n   output[i,3]<-substr(irow,13,13)\n   output[i,4]<-substr(irow,14,15)\n   output[i,5]<-substr(irow,16,19)\n   output[i,6]<-substr(irow,20,21)\n   output[i,7]<-substr(irow,22,23)\n   output[i,8]<-substr(irow,24,25)\n   output[i,9]<-substr(irow,26,27)\n   output[i,10]<-substr(irow,28,30)\n   output[i,11]<-substr(irow,31,32)\n   output[i,12]<-substr(irow,33,33)\n   output[i,13]<-substr(irow,34,36)\n   output[i,14]<-substr(irow,37,37)\n   output[i,15]<-substr(irow,38,39)\n   output[i,16]<-substr(irow,40,44)\n   output[i,17]<-substr(irow,45,48)\n   output[i,18]<-substr(irow,49,52)\n   output[i,19]<-substr(irow,53,73)\n   output[i,20]<-substr(irow,74,94)\n   output[i,21]<-substr(irow,95,95)\n   output[i,22]<-substr(irow,96,98)\n   output[i,23]<-substr(irow,99,100)\n   output[i,24]<-substr(irow,101,104)\n   output[i,25]<-substr(irow,105,105)\n   output[i,26]<-substr(irow,106,106)\n   output[i,27]<-substr(irow,107,108)\n   output[i,28]<-substr(irow,109,109)\n   output[i,29]<-substr(irow,110,112)\n   output[i,30]<-substr(irow,113,113)\n   output[i,31]<-substr(irow,114,114)\n   output[i,32]<-substr(irow,115,115)\n   output[i,33]<-substr(irow,116,119)\n }\n names(output)<-c(\"Agency\",\"Groupnumber\",\"Plotnumber\",\"Measurementnumber\",\"MeasureYear\",\"MeasureMonth\",\"MeasureDay\",\n                  \"Legalsubdivision\",\"Section\",\"Township\",\"Range\",\"Meridian\",\"Plottreatment\",\"Imperial\",\"Recordtype\",\n                  \"Treeplotsize\",\"Saplingplotsize\",\"Regenplotsize\",\"AVIinterpretedoverstory\",\"AVIinterpretedunderstory\",\n                  \"Location\",\"Slope percent\",\"Aspect\",\n                  \"Elevation\",\"Erosionpotential\",\"Drainage\",\"Depth_to_mineral_soil\",\"Surface_veg_type\",\n                  \"Groud_coverage\",\"Access\",\"Plot_damage\",\"Buffer_damage\",\"Establish_year\")\n return(output)\n}\n\n\ntreedata<-function(data)\n{n<-nrow(data)\n output<-data.frame(matrix(nrow=n,ncol=39))\n \n for(i in 1:n)\n { irow<-as.character(data[i,1])\n   output[i,1]<-substr(irow,1,2)\n   output[i,2]<-substr(irow,3,12)\n   output[i,3]<-substr(irow,13,13)\n   output[i,4]<-substr(irow,14,15)\n   output[i,5]<-substr(irow,16,19)\n   output[i,6]<-substr(irow,20,21)\n   output[i,7]<-substr(irow,22,23)\n   output[i,8]<-substr(irow,24,25)\n   output[i,9]<-substr(irow,26,27)\n   output[i,10]<-substr(irow,28,30)\n   output[i,11]<-substr(irow,31,32)\n   output[i,12]<-substr(irow,33,33)\n   output[i,13]<-substr(irow,34,36)\n   output[i,14]<-substr(irow,37,37)\n   output[i,15]<-substr(irow,38,39)\n   output[i,16]<-substr(irow,40,43)\n   output[i,17]<-substr(irow,44,45)\n   output[i,18]<-substr(irow,46,49)\n   output[i,19]<-substr(irow,50,53)\n   output[i,20]<-substr(irow,54,57)\n   output[i,21]<-substr(irow,58,58)\n   output[i,22]<-substr(irow,59,60)\n   output[i,23]<-substr(irow,61,62)\n   output[i,24]<-substr(irow,63,64)\n   output[i,25]<-substr(irow,65,67)\n   output[i,26]<-substr(irow,68,70)\n   output[i,27]<-substr(irow,71,73)\n   output[i,28]<-substr(irow,74,76)\n   output[i,29]<-substr(irow,77,79)\n   output[i,30]<-substr(irow,80,82)\n   output[i,31]<-substr(irow,83,89)\n   output[i,32]<-substr(irow,90,96)\n   output[i,33]<-substr(irow,97,103)\n   output[i,34]<-substr(irow,104,107)\n   output[i,35]<-substr(irow,108,108)\n   output[i,36]<-substr(irow,109,111)\n   output[i,37]<-substr(irow,112,114)\n   output[i,38]<-substr(irow,115,117)\n   output[i,39]<-substr(irow,118,121)\n }\n names(output)<-c(\"Agency\",\"Groupnumber\",\"Plotnumber\",\"Measurementnumber\",\"MeasureYear\",\"MeasureMonth\",\"MeasureDay\",\n                  \"Legalsubdivision\",\"Section\",\"Township\",\"Range\",\"Meridian\",\"Plottreatment\",\"Imperial\",\"Recordtype\",\n                  \"Treenumber\",\"Species\",\"DBH\",\"Height\",\"Heighttolivecrown\",\"Crownclass\",\"Conditioncode1\",\"Conditioncode2\",\n                  \"Conditioncode3\",\"DBHage\",\"Stumpage\",\"Incrementprevioustenyears\",\"Incrementpreviousyears\",\n                  \"Azimuth\",\"Distance\",\"Treeplotsize\",\"Saplingplotsize\",\"Regenerationplotsize\",\"Establishmentyear\",\n                  \"Crownstatus\",\"Crownwidthnorth\",\"Crownwidthwest\",\"Crownwidthsouth\",\"Crownwidtheast\")\n return(output)\n}\n\n\nregendata<-function(data)\n{n<-nrow(data)\n output<-data.frame(matrix(nrow=n,ncol=26))\n \n for(i in 1:n)\n { irow<-as.character(data[i,1])\n   output[i,1]<-substr(irow,1,2)\n   output[i,2]<-substr(irow,3,12)\n   output[i,3]<-substr(irow,13,13)\n   output[i,4]<-substr(irow,14,15)\n   output[i,5]<-substr(irow,16,19)\n   output[i,6]<-substr(irow,20,21)\n   output[i,7]<-substr(irow,22,23)\n   output[i,8]<-substr(irow,24,25)\n   output[i,9]<-substr(irow,26,27)\n   output[i,10]<-substr(irow,28,30)\n   output[i,11]<-substr(irow,31,32)\n   output[i,12]<-substr(irow,33,33)\n   output[i,13]<-substr(irow,34,36)\n   output[i,14]<-substr(irow,37,37)\n   output[i,15]<-substr(irow,38,39)\n   output[i,16]<-substr(irow,40,43)\n   output[i,17]<-substr(irow,44,45)\n   output[i,18]<-substr(irow,46,48)\n   output[i,19]<-substr(irow,49,51)\n   output[i,20]<-substr(irow,52,54)\n   output[i,21]<-substr(irow,55,57)\n   output[i,22]<-substr(irow,58,60)\n   output[i,23]<-substr(irow,61,67)\n   output[i,24]<-substr(irow,68,74)\n   output[i,25]<-substr(irow,75,81)\n   output[i,26]<-substr(irow,82,85)\n }\n names(output)<-c(\"Agency\",\"Groupnumber\",\"Plotnumber\",\"Measurementnumber\",\"MeasureYear\",\"MeasureMonth\",\"MeasureDay\",\n                  \"Legalsubdivision\",\"Section\",\"Township\",\"Range\",\"Meridian\",\"Plottreatment\",\"Imperial\",\"Recordtype\",\n                  \"Treenumber\",\"Species\",\"Regeneration_in_height_class1\",\"Regeneration_in_height_class2\",\n                  \"Regeneration_in_height_class3\",\"Regeneration_in_height_class4\",\"Regeneration_in_height_class5\",\n                  \"Treeplotsize\",\"Saplingplotsize\",\"Regenerationplotsize\",\"Establishmentyear\")\n return(output)\n}\n\n\n\n\n\n\n\n",
    "created" : 1460591218500.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "648541885",
    "id" : "8545679",
    "lastKnownWriteTime" : 1460594785,
    "path" : "~/GitHub/landwebNRV/landwebNRV/R/obtainTreeDataAB.R",
    "project_path" : "R/obtainTreeDataAB.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "source_on_save" : false,
    "type" : "r_source"
}