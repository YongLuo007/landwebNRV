{
    "contents" : "################################################################################\n#' purify NFI PSP data\n#' \n#' \n#' @param lgtreeRaw  data table, which is the raw tree data from DAT file, recordType == 2\n#'                  treeData can be obtained using obtainTreeDataAB function\n#'                  \n#'                  \n#' @param lgtreeHeadRaw  data table, which is the raw tree data from DAT file, recordType == 2\n#'                  treeData can be obtained using obtainTreeDataAB function\n#'\n#' @param standOrigin  data table, which is the raw tree data from DAT file, recordType == 2\n#'                  treeData can be obtained using obtainTreeDataAB function\n#'                  \n#' @param lgtreeRaw  data table, which is the raw tree data from DAT file, recordType == 2\n#'                  treeData can be obtained using obtainTreeDataAB function\n#'                  \n#' @param lgtreeAge  data table, which is the raw tree data from DAT file, recordType == 2\n#'                  treeData can be obtained using obtainTreeDataAB function\n\n#'\n#' @return  two data tables, the first one head data, which contains the location and SA info.\n#'                           the second one is purified tree data, which contains inividual tree infor.\n#'                           for the tree data, all trees are alive.\n#'                      \n#'\n#' @note no note\n#'\n#' @seealso no\n#'\n#' @include \n#' @export\n#' @docType methods\n#' @rdname dataPurification_NFIPSP\n#'\n#' @author Yong Luo\n#'\n#' @examples\n#' \\dontrun{\n#' \n#' }\nsetGeneric(\"dataPurification_NFIPSP\", function(MBTSPDataRaw) {\n  standardGeneric(\"dataPurification_NFIPSP\")\n})\n#' @export\n#' @rdname dataPurification_NFIPSP\nsetMethod(\n  \"dataPurification_NFIPSP\",\n  signature = c(MBTSPDataRaw = \"data.table\"),\n  definition = function(MBTSPDataRaw) {\n    # get SA information using dominant and codominant trees\n    MBTSPDataRaw <- MBTSPDataRaw[,Nofplot:=length(unique(PLOTNO)), by = TILE]\n    \n    headData <- MBTSPDataRaw[!is.na(AGE_BH) & (CC == \"D\" | CC == \"C\"),]\n    headData <- headData[, SA:=as.integer(mean(AGE_BH))+8, by = TILE]\n    headData[, Plotsize:=0.02*Nofplot]\n    headData <- headData[,.(TILE, YEAR, EASTING, NORTHING, SA, Plotsize)]\n    headData <- headData[!is.na(EASTING) & !is.na(NORTHING),]\n    headData <- unique(headData, by = \"TILE\")\n    setnames(headData, c(\"YEAR\", \"EASTING\", \"NORTHING\"),\n             c(\"Year\", \"Easting\", \"Northing\"))\n    \n    treeData <- MBTSPDataRaw[TILE %in% unique(headData$TILE),][\n      ,.(TILE, TREENO, SPP, DBH, HT, COND)]\n    treeData <- treeData[!is.na(COND) | COND != 10,][,COND:=NULL]\n    setnames(treeData, c(\"TILE\", \"TREENO\", \"SPP\", \"HT\"),\n             c(\"PlotID\", \"Treenumber\", \"Species\", \"Height\"))\n    setnames(headData, \"TILE\", \"PlotID\")\n    return(list(headData = headData,\n                treeData = treeData))\n  })\n",
    "created" : 1461565850242.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1700371602",
    "id" : "3880F49B",
    "lastKnownWriteTime" : 1461566632,
    "path" : "~/GitHub/landwebNRV/landwebNRV/R/dataPurification_NFIPSP.R",
    "project_path" : "R/dataPurification_NFIPSP.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}