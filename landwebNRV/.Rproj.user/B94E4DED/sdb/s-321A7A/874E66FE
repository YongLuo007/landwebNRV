{
    "contents" : "rm(list=ls())\n# workPath <- \"H:/LandWeb/Data/AB\"\nworkPath <- \"C:/Users/yonluo/Documents/LandWeb/Data/AB\"\ntreedataraw <- read.csv(file.path(workPath, \"ABMatureTreeData.csv\"),\n                        header = TRUE,\n                        stringsAsFactor = FALSE) %>%\n  data.table\nheaddataraw <- read.csv(file.path(workPath, \"plotLocation.csv\"),\n                        header = TRUE,\n                        stringsAsFactor = FALSE) %>%\n  data.table\nsource('~/GitHub/landwebNRV/landwebNRV/R/dataPurification_ABMature.R')\n\nABPSPoutput <- dataPurification_ABMature(treeDataRaw = treedataraw, plotHeaderDataRaw = headdataraw)\n\nrm(treedataraw, dataPurification_ABMature, headdataraw)\n\n\nsource('~/GitHub/landwebNRV/landwebNRV/R/dataPurification_BCPSP.R')\nload(\"C:/Users/yonluo/Documents/LandWeb/Data/BC/BC_PSP.RData\")\nBCPSPoutput <- dataPurification_BCPSP(treeDataRaw = treedata, plotHeaderDataRaw = plotheader)\nrm(treedata, plotheader, dataPurification_BCPSP)\n\n\nsource('~/GitHub/landwebNRV/landwebNRV/R/dataPurification_SKPSP.R')\nload(\"~/LandWeb/Data/SK/SKPSP.RData\")\nSKPSPoutput <- dataPurification_SKPSP(SADataRaw = plotheader1, plotHeaderRaw = plotheader3,\n                             measureHeaderRaw = plotheader2, treeDataRaw= treedata)\nrm(dataPurification_SKPSP, plotheader1, plotheader2, plotheader3, treedata)\n\n\n\nload(\"~/LandWeb/Data/SK/SKTSP_PAPP.RData\")\nsource('~/GitHub/landwebNRV/landwebNRV/R/dataPurification_SKTSP_PPPA.R')\nsharedCol <- names(PPsampletree)[names(PPsampletree) %in% names(PAsampletree)]\nsampletree <- rbind(PPsampletree[, sharedCol, with = FALSE], \n                    PAsampletree[, sharedCol, with = FALSE])\nrm(sharedCol)\nsharedCol <- names(PPplotheader)[names(PPplotheader) %in% names(PAplotheader)]\nplotheader <- rbind(PPplotheader[, sharedCol, with = FALSE], \n                    PAplotheader[, sharedCol, with = FALSE])\n\nrm(sharedCol)\nsharedCol <- names(PPtreedata)[names(PPtreedata) %in% names(PAtreedata)]\ntreedata <- rbind(PPtreedata[, sharedCol, with = FALSE], \n                  PAtreedata[, sharedCol, with = FALSE])\n\nSKTSP_PPPA_output <- dataPurification_SKTSP_PPPA(sampleTreeRaw = sampletree,\n                                        plotHeaderRaw = plotheader,\n                                        treeDataRaw = treedata)\nrm(dataPurification_SKTSP_PPPA, sharedCol, PAplotheader, PPplotheader,\n   PAsampletree, PPsampletree, PAtreedata, PPtreedata, sampletree, plotheader,\n   treedata)\n\n\n\nsource('~/GitHub/landwebNRV/landwebNRV/R/dataPurification_SKTSP_Mistic.R')\nload(\"~/LandWeb/Data/SK/SK_TSP_Mistic.RData\")\n\nSKTSP_Mistik_output <- dataPurification_SKTSP_Mistic(compiledPlotData = plotheader,\n                                              compiledTreeData = treedata)\n\nrm(dataPurification_SKTSP_Mistic, plotheader, treedata)\n\n\n\nworkPath <- \"C:/Users/yonluo/Documents/PSPs/MB/PSPcsv\"\nsource('~/GitHub/landwebNRV/landwebNRV/R/dataPurification_MBPSP.R')\nfor (i in 1:5){\n  MBPSPDataRawadd <- read.csv(file.path(workPath,\n                                        paste(\"MBPSP_2012_file\", i, \".csv\",\n                                              sep = \"\")),\n                           header = TRUE,\n                           stringsAsFactors = FALSE) %>%\n    data.table\n  if(i == 1){\n    MBPSPDataRaw <- MBPSPDataRawadd\n  } else {\n    MBPSPDataRaw <- rbind(MBPSPDataRaw, MBPSPDataRawadd)\n  }\n  \n}\nrm(i, MBPSPDataRawadd, workPath)\nMBPSPoutput <- dataPurification_MBPSP(MBPSPDataRaw = MBPSPDataRaw)\nrm(MBPSPDataRaw, dataPurification_MBPSP)\n\n\nworkPath <- \"C:/Users/yonluo/Documents/PSPs/MB/TSPcsv\"\nfiles <- dir(workPath, pattern = \".csv\")\nMBTSPDataRaw <- read.csv(file.path(workPath, \"MB_TSP_FML1.csv\"),\n                         header = TRUE,\n                         stringsAsFactor = FALSE) %>%\n  data.table\nnames(MBTSPDataRaw)[12] <- \"F_H\"\n\nMBTSPDataRawAdd <- read.csv(file.path(workPath, \"MB_TSP_FMU11.csv\"),\n                         header = TRUE,\n                         stringsAsFactor = FALSE) %>%\n  data.table\nMBTSPDataRaw <- rbind(MBTSPDataRaw, MBTSPDataRawAdd)\nrm(MBTSPDataRawAdd)\n\nMBTSPDataRawAdd <- read.csv(file.path(workPath, \"MB_TSP_FMU12.csv\"),\n                            header = TRUE,\n                            stringsAsFactor = FALSE) %>%\n  data.table\nMBTSPDataRaw <- rbind(MBTSPDataRaw, MBTSPDataRawAdd)\nrm(MBTSPDataRawAdd)\n\nMBTSPDataRawAdd <- read.csv(file.path(workPath, \"MB_TSP_FMUs13_14.csv\"),\n                            header = TRUE,\n                            stringsAsFactor = FALSE) %>%\n  data.table\nnames(MBTSPDataRawAdd)[12] <- \"F_H\"\nset(MBTSPDataRawAdd, ,c(\"COND2\", \"COND3\"), NULL)\nsetnames(MBTSPDataRawAdd, \"COND1\", \"COND\")\nMBTSPDataRaw <- rbind(MBTSPDataRaw, MBTSPDataRawAdd)\nrm(MBTSPDataRawAdd)\n\nMBTSPDataRawAdd <- read.csv(file.path(workPath, \"MB_TSP_Highrock.csv\"),\n                            header = TRUE,\n                            stringsAsFactor = FALSE) %>%\n  data.table\nMBTSPDataRaw <- rbind(MBTSPDataRaw, MBTSPDataRawAdd)\nrm(MBTSPDataRawAdd)\n\nMBTSPDataRawAdd <- read.csv(file.path(workPath, \"MB_TSP_Pineland.csv\"),\n                            header = TRUE,\n                            stringsAsFactor = FALSE) %>%\n  data.table\nsetnames(MBTSPDataRawAdd, c(\"TRANSECT\", \"FULL_HALF\"), c(\"TRANS\", \"F_H\"))\nMBTSPDataRaw <- rbind(MBTSPDataRaw, MBTSPDataRawAdd)\nrm(MBTSPDataRawAdd)\n\nMBTSPDataRawAdd <- read.csv(file.path(workPath, \"MB_TSP_Saskriver_1.csv\"),\n                            header = TRUE,\n                            stringsAsFactor = FALSE) %>%\n  data.table\nnames(MBTSPDataRawAdd)[12] <- \"F_H\"\nMBTSPDataRaw <- rbind(MBTSPDataRaw, MBTSPDataRawAdd)\nrm(MBTSPDataRawAdd)\n\nMBTSPDataRawAdd <- read.csv(file.path(workPath, \"MB_TSP_Saskriver_2.csv\"),\n                            header = TRUE,\n                            stringsAsFactor = FALSE) %>%\n  data.table\nnames(MBTSPDataRawAdd)[12] <- \"F_H\"\nMBTSPDataRaw <- rbind(MBTSPDataRaw, MBTSPDataRawAdd)\nrm(MBTSPDataRawAdd)\n\nsource('~/GitHub/landwebNRV/landwebNRV/R/dataPurification_MBTSP.R')\n\nMBTSPoutput <- dataPurification_MBTSP(MBTSPDataRaw)\n\n\nrm(MBTSPDataRaw, workPath)\nworkPath <- \"~/PSPs/NRCAN/NFI_PSP\"\nsource('~/GitHub/landwebNRV/landwebNRV/R/dataPurification_NFIPSP.R')\nlgptreeRaw <- read.csv(file.path(workPath, \"all_gp_ltp_tree.csv\"),\n                       header = TRUE,\n                       stringsAsFactor = FALSE) %>%\n  data.table\nlgpHeaderRaw <- read.csv(file.path(workPath, \"all_gp_ltp_header.csv\"),\n                         header = TRUE,\n                         stringsAsFactor = FALSE) %>%\n  data.table\napproxLocation <- read.csv(file.path(workPath, \"all_gp_climate_approx_loc.csv\"),\n                           header = TRUE, \n                           stringsAsFactor = FALSE) %>%\n  data.table\n\nNFIPSPoutput <- dataPurification_NFIPSP(lgptreeRaw = lgptreeRaw, \n                                     lgpHeaderRaw = lgpHeaderRaw,\n                                     approxLocation = approxLocation)\nrm(workPath, lgptreeRaw, lgpHeaderRaw, approxLocation, dataPurification_NFIPSP)\n\n\nworkPath <- \"~/PSPs/NT/data\"\nplotHeaderRaw <- read.csv(file.path(workPath, \"PLOT.csv\"),\n                          header = TRUE,\n                          stringsAsFactor = FALSE) %>%\n  data.table\nadditionalLocationInfor <- read.csv(file.path(workPath, \"AdditionalLocations.csv\"),\n                                    header = TRUE,\n                                    stringsAsFactor = FALSE) %>%\n  data.table\ntreeDataRaw <- read.csv(file.path(workPath, \"TREE.csv\"),\n                        header = TRUE,\n                        stringsAsFactor = FALSE) %>%\n  data.table\nprimarySAInfor <- read.csv(file.path(workPath, \"SAMPLE_TREE.csv\"),\n                           header = TRUE,\n                           stringsAsFactor = FALSE) %>%\n  data.table\nsecondSAInfor <- read.csv(file.path(workPath, \"SA_infor.csv\"),\n                          header = TRUE,\n                          stringsAsFactor = FALSE) %>%\n  data.table\n\nsource('~/GitHub/landwebNRV/landwebNRV/R/dataPurification_NWTTSP.R')\n\nNWTTSPoutput <- dataPurification_NWTTSP(plotHeaderRaw,\n                                        primarySAInfor,\n                                        secondSAInfor,\n                                        additionalLocationInfor,\n                                        treeDataRaw)\n\n",
    "created" : 1461735145076.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1044762410",
    "id" : "874E66FE",
    "lastKnownWriteTime" : 1461737432,
    "path" : "~/GitHub/landwebNRV/purifyData.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}